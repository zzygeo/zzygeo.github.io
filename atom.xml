<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>西瓜🍉</title>
  
  
  <link href="https://zzygeo.cn/atom.xml" rel="self"/>
  
  <link href="https://zzygeo.cn/"/>
  <updated>2021-03-13T17:41:50.323Z</updated>
  <id>https://zzygeo.cn/</id>
  
  <author>
    <name>CallMe🍉</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dpkg被中断的解决办法</title>
    <link href="https://zzygeo.cn/2021/03/14/dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://zzygeo.cn/2021/03/14/dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2021-03-13T17:40:02.000Z</published>
    <updated>2021-03-13T17:41:50.323Z</updated>
    
    <content type="html"><![CDATA[<p>linux系统安装软件是有时会碰到“dpkg 被中断,您必须手工运行 sudo dpkg –configure -a解决此问题”，然而按照提示运行却并没能很好的解决问题。其实导致这个问题的主要原因是因为/var/lib/dpkg/updates文件下的文件有问题，可能是其他软件安装过程或是其他原因导致的，这里删除掉然后重建即可。</p><pre><code>sudo rm /var/lib/dpkg/updates/*sudo apt-get updatesudo apt-get upgrade</code></pre><p>解释：[<em>]sudo apt-get update指令会重新建立这些资料，所以不必担心删除后会出问题；<br>[</em>]sudo apt-get upgrade会更新你的电脑里面已安装的软件的明细，根据软件的明细更新软件到最新版。<br>PS：“dpkg ”是“Debian Packager ”的简写。为 “Debian” 专门开发的套件管理系统，方便软件的安装、更新及移除。所有源自“Debian”的“Linux ”发行版都使用 “dpkg”</p><p>参考<a href="https://blog.csdn.net/coolcooljob/article/details/79964812">博客</a></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;linux系统安装软件是有时会碰到“dpkg 被中断,您必须手工运行 sudo dpkg –configure -a解决此问题”，然而按照提示运行却并没能很好的解决问题。其实导致这个问题的主要原因是因为/var/lib/dpkg/updates文件下的文件有问题，可能是其他</summary>
      
    
    
    
    
    <category term="-ubuntu" scheme="https://zzygeo.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>安装snap以及常用命令</title>
    <link href="https://zzygeo.cn/2021/03/14/%E5%AE%89%E8%A3%85snap/"/>
    <id>https://zzygeo.cn/2021/03/14/%E5%AE%89%E8%A3%85snap/</id>
    <published>2021-03-13T17:35:25.000Z</published>
    <updated>2021-03-13T17:39:15.166Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装snap"><a href="#1-安装snap" class="headerlink" title="1.安装snap"></a>1.安装snap</h1><pre><code>sudo apt-get install snapdsudo apt-get install snapcraft</code></pre><h1 id="2-常用命令"><a href="#2-常用命令" class="headerlink" title="2.常用命令"></a>2.常用命令</h1><pre><code>//列出已经安装的snap包sudo snap list//搜索要安装的snap包sudo snap find &lt;text to search&gt;//安装一个snap包sudo snap install &lt;snap name&gt;//更新一个snap包，如果你后面不加包的名字的话那就是更新所有的snap包sudo snap refresh &lt;snap name&gt;//把一个包还原到以前安装的版本sudo snap revert &lt;snap name&gt;//删除一个snap包sudo snap remove &lt;snap name&gt;</code></pre><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-安装snap&quot;&gt;&lt;a href=&quot;#1-安装snap&quot; class=&quot;headerlink&quot; title=&quot;1.安装snap&quot;&gt;&lt;/a&gt;1.安装snap&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;sudo apt-get install snapd
sudo apt-ge</summary>
      
    
    
    
    
    <category term="-ubuntu" scheme="https://zzygeo.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu配置C/C++开发环境</title>
    <link href="https://zzygeo.cn/2021/03/14/ubuntu%E9%85%8D%E7%BD%AEC-C-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>https://zzygeo.cn/2021/03/14/ubuntu%E9%85%8D%E7%BD%AEC-C-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</id>
    <published>2021-03-13T17:31:07.000Z</published>
    <updated>2021-03-13T17:34:51.732Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-在代码文件夹下建立两个文件"><a href="#1-在代码文件夹下建立两个文件" class="headerlink" title="1.在代码文件夹下建立两个文件"></a>1.在代码文件夹下建立两个文件</h1><p>launch.json 以及 tasks.json</p><h1 id="2-给这个两个文件配置文件"><a href="#2-给这个两个文件配置文件" class="headerlink" title="2.给这个两个文件配置文件"></a>2.给这个两个文件配置文件</h1><p>launch.json:</p><pre><code>&#123;    // Use IntelliSense to learn about possible attributes.    // Hover to view descriptions of existing attributes.    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387    &quot;version&quot;: &quot;0.2.0&quot;,    &quot;configurations&quot;: [        &#123;            &quot;name&quot;: &quot;(gdb) Launch&quot;,            &quot;type&quot;: &quot;cppdbg&quot;,            &quot;request&quot;: &quot;launch&quot;,            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/$&#123;fileBasenameNoExtension&#125;.out&quot;,            &quot;args&quot;: [],            &quot;stopAtEntry&quot;: false,            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,            &quot;environment&quot;: [],            &quot;externalConsole&quot;: true,    //如果不要窗口弹出，在ide中显示，就设置成 false            &quot;MIMode&quot;: &quot;gdb&quot;,            &quot;preLaunchTask&quot;: &quot;build&quot;,   //表示预先生成一个中间文件，用于g++运行            &quot;setupCommands&quot;: [                &#123;                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,                    &quot;ignoreFailures&quot;: true                &#125;            ]        &#125;    ]&#125;</code></pre><p>tasks.json:</p><pre><code>&#123;    // See https://go.microsoft.com/fwlink/?LinkId=733558    // for the documentation about the tasks.json format    &quot;version&quot;: &quot;2.0.0&quot;,    &quot;tasks&quot;: [        &#123;            &quot;label&quot;: &quot;build&quot;,            &quot;type&quot;: &quot;shell&quot;,            &quot;command&quot;: &quot;g++&quot;,            &quot;args&quot;: [&quot;-g&quot;, &quot;$&#123;file&#125;&quot;, &quot;-std=c++11&quot;, &quot;-o&quot;, &quot;$&#123;fileBasenameNoExtension&#125;.out&quot;]    //相当于 g++ -g main.cpp -std=c++11 -o main.out        &#125;    ]&#125;</code></pre><p>参考<a href="https://blog.csdn.net/suiyueruge1314/article/details/106125949">博客</a></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-在代码文件夹下建立两个文件&quot;&gt;&lt;a href=&quot;#1-在代码文件夹下建立两个文件&quot; class=&quot;headerlink&quot; title=&quot;1.在代码文件夹下建立两个文件&quot;&gt;&lt;/a&gt;1.在代码文件夹下建立两个文件&lt;/h1&gt;&lt;p&gt;launch.json 以及 tas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ubuntu安装gcc依赖关系报错</title>
    <link href="https://zzygeo.cn/2021/03/14/ubuntu%E5%AE%89%E8%A3%85gcc%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E6%8A%A5%E9%94%99/"/>
    <id>https://zzygeo.cn/2021/03/14/ubuntu%E5%AE%89%E8%A3%85gcc%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E6%8A%A5%E9%94%99/</id>
    <published>2021-03-13T17:26:01.000Z</published>
    <updated>2021-03-13T17:28:53.845Z</updated>
    
    <content type="html"><![CDATA[<p>使用aptitude包依赖管理工具替代apt处理，看其他的博客说这个得慎用，不过用来安装gcc倒是没啥问题。</p><pre><code>sudo apt-get install aptitudesido aptitude install gcc g++</code></pre><p>解决方案里选择no,yes,yes.<br>参考<a href="https://blog.csdn.net/CLZHIT/article/details/104508894">博客</a></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用aptitude包依赖管理工具替代apt处理，看其他的博客说这个得慎用，不过用来安装gcc倒是没啥问题。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install aptitude
sido aptitude install gcc g++
&lt;/code&gt;</summary>
      
    
    
    
    
    <category term="-ubuntu" scheme="https://zzygeo.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装vim依赖关系报错</title>
    <link href="https://zzygeo.cn/2021/03/14/ubuntu%E5%AE%89%E8%A3%85vim%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E6%8A%A5%E9%94%99/"/>
    <id>https://zzygeo.cn/2021/03/14/ubuntu%E5%AE%89%E8%A3%85vim%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E6%8A%A5%E9%94%99/</id>
    <published>2021-03-13T17:22:16.000Z</published>
    <updated>2021-03-13T17:24:13.803Z</updated>
    
    <content type="html"><![CDATA[<p>按如下步骤进行就可：</p><pre><code>sudo apt-get purge vim-commonsudo apt-get updatesudo apt-get upgradesudo apt-get install vim</code></pre><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;按如下步骤进行就可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get purge vim-common
sudo apt-get update
sudo apt-get upgrade
sudo apt-get install vim
&lt;/code&gt;&lt;/pre&gt;&lt;h</summary>
      
    
    
    
    
    <category term="-ubuntu" scheme="https://zzygeo.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下的firefox无法播放视频解决方案</title>
    <link href="https://zzygeo.cn/2021/03/14/ubuntu%E4%B8%8B%E7%9A%84firefox%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://zzygeo.cn/2021/03/14/ubuntu%E4%B8%8B%E7%9A%84firefox%E6%97%A0%E6%B3%95%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2021-03-13T17:09:31.000Z</published>
    <updated>2021-03-13T17:19:59.313Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-下载flash的tar-gz文件"><a href="#1-下载flash的tar-gz文件" class="headerlink" title="1.下载flash的tar.gz文件"></a>1.下载flash的tar.gz文件</h1><p>直接去<a href="https://www.flash.cn/">官网链接</a>下载</p><h1 id="2-解压tar-gz文件"><a href="#2-解压tar-gz文件" class="headerlink" title="2.解压tar.gz文件"></a>2.解压tar.gz文件</h1><pre><code>tar -zxvf filename.tar.gz</code></pre><p>注意filename.tar.gz就是你下载的文件的名字，可以直接复制下载包名字。</p><h1 id="3-移动解压文件夹"><a href="#3-移动解压文件夹" class="headerlink" title="3.移动解压文件夹"></a>3.移动解压文件夹</h1><p>先进入安装包目录下,然后<br>    sudo cp libflashplayer.so /usr/lib/mozilla/plugins</p><h1 id="4-进入插件目录并附加权限"><a href="#4-进入插件目录并附加权限" class="headerlink" title="4.进入插件目录并附加权限"></a>4.进入插件目录并附加权限</h1><pre><code>cd usr/lib/mozilla/pluginssudo chmod 755 libflashplayer.so</code></pre><h1 id="5-缺少依赖报错解决"><a href="#5-缺少依赖报错解决" class="headerlink" title="5.缺少依赖报错解决"></a>5.缺少依赖报错解决</h1><pre><code>sudo apt-get install ffmpeg  //ffmpeg支持H.264解码</code></pre><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-下载flash的tar-gz文件&quot;&gt;&lt;a href=&quot;#1-下载flash的tar-gz文件&quot; class=&quot;headerlink&quot; title=&quot;1.下载flash的tar.gz文件&quot;&gt;&lt;/a&gt;1.下载flash的tar.gz文件&lt;/h1&gt;&lt;p&gt;直接去&lt;a </summary>
      
    
    
    
    
    <category term="-ubuntu" scheme="https://zzygeo.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下解决wps2019缺少字体问题</title>
    <link href="https://zzygeo.cn/2021/03/14/ubuntu%E4%B8%8B%E8%A7%A3%E5%86%B3wps2019%E7%BC%BA%E5%B0%91%E5%AD%97%E4%BD%93%E9%97%AE%E9%A2%98/"/>
    <id>https://zzygeo.cn/2021/03/14/ubuntu%E4%B8%8B%E8%A7%A3%E5%86%B3wps2019%E7%BC%BA%E5%B0%91%E5%AD%97%E4%BD%93%E9%97%AE%E9%A2%98/</id>
    <published>2021-03-13T16:56:33.000Z</published>
    <updated>2021-03-13T17:06:11.694Z</updated>
    
    <content type="html"><![CDATA[<p>主要参考<a href="https://blog.csdn.net/sunmengke1101/article/details/103436997">博客</a></p><h1 id="1-准备字体包"><a href="#1-准备字体包" class="headerlink" title="1.准备字体包"></a>1.准备字体包</h1><p><a href="https://wws.lanzous.com/iBIiqmwnvve">下载链接</a></p><h1 id="2-解压到指定目录下"><a href="#2-解压到指定目录下" class="headerlink" title="2.解压到指定目录下"></a>2.解压到指定目录下</h1><pre><code>sudo unzip wps_symbol_fonts.zip -d /home/&lt;user&gt;/usr/share/fonts</code></pre><h1 id="3-到解压的根目录下安装"><a href="#3-到解压的根目录下安装" class="headerlink" title="3.到解压的根目录下安装"></a>3.到解压的根目录下安装</h1><p>依次打开每个文件并点击安装即可</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主要参考&lt;a href=&quot;https://blog.csdn.net/sunmengke1101/article/details/103436997&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-准备字体包&quot;&gt;&lt;a href=&quot;#1-准备字体包&quot; class=&quot;headerl</summary>
      
    
    
    
    
    <category term="-ubuntu" scheme="https://zzygeo.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu更换源教程</title>
    <link href="https://zzygeo.cn/2021/03/14/Ubuntu%E6%9B%B4%E6%8D%A2%E6%BA%90%E6%95%99%E7%A8%8B/"/>
    <id>https://zzygeo.cn/2021/03/14/Ubuntu%E6%9B%B4%E6%8D%A2%E6%BA%90%E6%95%99%E7%A8%8B/</id>
    <published>2021-03-13T16:34:31.000Z</published>
    <updated>2021-03-13T16:44:27.136Z</updated>
    
    <content type="html"><![CDATA[<p>参考<a href="https://blog.csdn.net/weixin_43876206/article/details/100924378">博客</a></p><h1 id="1-备份源列表"><a href="#1-备份源列表" class="headerlink" title="1.备份源列表"></a>1.备份源列表</h1><pre><code>sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</code></pre><h1 id="2-打开sources-list文件"><a href="#2-打开sources-list文件" class="headerlink" title="2.打开sources.list文件"></a>2.打开sources.list文件</h1><pre><code>sudo gedit /etc/apt/sources.list</code></pre><h1 id="3-修改sources-list文件"><a href="#3-修改sources-list文件" class="headerlink" title="3.修改sources.list文件"></a>3.修改sources.list文件</h1><pre><code>#  阿里镜像源deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</code></pre><h1 id="4-更新并升级"><a href="#4-更新并升级" class="headerlink" title="4.更新并升级"></a>4.更新并升级</h1><pre><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code></pre><h1 id="5-恢复源列表"><a href="#5-恢复源列表" class="headerlink" title="5.恢复源列表"></a>5.恢复源列表</h1><pre><code>sudo cp /etc/apt/sources.list.bak /etc/apt/sources.list</code></pre><hr><p>其他的源请自己搜索，这里只放了阿里云的。</p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考&lt;a href=&quot;https://blog.csdn.net/weixin_43876206/article/details/100924378&quot;&gt;博客&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-备份源列表&quot;&gt;&lt;a href=&quot;#1-备份源列表&quot; class=&quot;headerl</summary>
      
    
    
    
    
    <category term="-Ubuntu" scheme="https://zzygeo.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>github设置自己的域名</title>
    <link href="https://zzygeo.cn/2021/01/20/github%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/"/>
    <id>https://zzygeo.cn/2021/01/20/github%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/</id>
    <published>2021-01-20T08:30:55.000Z</published>
    <updated>2021-02-27T10:14:48.957Z</updated>
    
    <content type="html"><![CDATA[<p>哈哈，上次整了一晚上的没整明白，今天两下就整好了，看来真的进步不错哈哈，至少看东西，解决问题更有耐心也更能看懂了。<br><a id="more"></a>)</p><h1 id="1-购买域名"><a href="#1-购买域名" class="headerlink" title="1.购买域名"></a>1.购买域名</h1><p>我是买的阿里云的域名，如下图：<br><img src="/blog_img/github设置自己的域名/1.jpg" alt="域名"><br>域名解析如下：<br><img src="/blog_img/github设置自己的域名/2.jpg" alt="域名解析"></p><h1 id="2-github仓库设置域名地址"><a href="#2-github仓库设置域名地址" class="headerlink" title="2.github仓库设置域名地址"></a>2.github仓库设置域名地址</h1><p>在blog目录下的source文件下，创一个叫CNAME的无后缀文件，里面填入你的域名，比如我的   zzygeo.cn    如下图：<br><img src="/blog_img/github设置自己的域名/4.jpg" alt=""><br>如下图，主要是要设置博客上传分支的目录，以及更改你自己的域名（创建CNAME后自动生成），采用https加密。<br><img src="/blog_img/github设置自己的域名/3.jpg" alt=""></p><p>到此就设置完成了！</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;哈哈，上次整了一晚上的没整明白，今天两下就整好了，看来真的进步不错哈哈，至少看东西，解决问题更有耐心也更能看懂了。&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>pcl+vs+cmake编译</title>
    <link href="https://zzygeo.cn/2020/12/27/pcl-vs-cmake%E7%BC%96%E8%AF%91/"/>
    <id>https://zzygeo.cn/2020/12/27/pcl-vs-cmake%E7%BC%96%E8%AF%91/</id>
    <published>2020-12-27T14:50:27.000Z</published>
    <updated>2021-02-27T10:10:35.722Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇写的配置可能是最基础的，也是很麻烦，其实可以用cmake来偷个懒，这样就不用附加依赖性已经加入库目录和包含目录了。<br><a id="more"></a>)</p><h1 id="1-软件准备"><a href="#1-软件准备" class="headerlink" title="1.软件准备"></a>1.软件准备</h1><p>1.All in one 安装包。</p><p>2.获取All in one 包对应得PDB文件包，用于后期单步调试。</p><p>3.安装Visual studio 2019编译器</p><p>4.cmake<br><img src="/blog_img/PCL配置/17.png" alt="示意图"><br><img src="/blog_img/PCL配置/1.jpg" alt="示意图"></p><p>其实源码包用不上，懒得改了，最复杂的方式就是源代码加第三方库进行配置，等我配置好了也会再一篇关于源码方式的配置。</p><hr><h1 id="2-链接"><a href="#2-链接" class="headerlink" title="2.链接"></a>2.链接</h1><p><a href="https://github.com/PointCloudLibrary/pcl/releases">pcl下载地址</a><br><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">visual studio下载地址</a><br><a href="https://cmake.org/download/">cmake下载地址</a></p><hr><h1 id="3-安装事项"><a href="#3-安装事项" class="headerlink" title="3.安装事项"></a>3.安装事项</h1><p>为了方便配置，pcl安装目录尽量默认，不默认后续添加目录需要选择对应的位置。</p><p>pcl安装请一定选择创建系统路径，visual studio和cmake安装位置随意，其他选项默认即可。</p><p>pcl安装完成后，请把下载的pcd文件解压，如下图：<br><img src="/blog_img/PCL配置/2.jpg" alt=""></p><p>将所有文件复制，安装到pcl下的BIN文件下<br><img src="/blog_img/PCL配置/3.jpg" alt=""></p><p>检查pcl安装目录下的 3rdParty-OpenNI2是否只有一个安装包（我的是这样），这可能是事先安装过SDK的原因，请卸载了重新安装在OpenNI2下，安装完成如下图：<br><img src="/blog_img/PCL配置/4.jpg" alt=""></p><p>cmake 安装请选择添加到系统路径，没选的话也可以自己手动添加，添加的方式为cmake目录下bin文件  比如C:\APP\Cmake\bin这样的形式。</p><hr><h1 id="4-关于Visual-studio安装项目"><a href="#4-关于Visual-studio安装项目" class="headerlink" title="4.关于Visual studio安装项目"></a>4.关于Visual studio安装项目</h1><p>我安装了这些负载</p><p><img src="/blog_img/PCL配置/5.png" alt=""></p><hr><h1 id="5-环境配置"><a href="#5-环境配置" class="headerlink" title="5.环境配置"></a>5.环境配置</h1><p>右键我的电脑——高级系统设置-环境变量，在path选项下新建如下几项，根据你pcl安装的位置来：<br><img src="/blog_img/PCL配置/6.jpg" alt=""></p><p>比如我的：<br>C:\Program Files\PCL 1.11.0\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Tools<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Redist</p><p>在系统变量下，配置如下图：<br><img src="/blog_img/PCL配置/6.png" alt=""><br>比如我的：<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Tools<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\bin<br>C:\Program Files\PCL 1.11.0\bin</p><hr><h1 id="6-cmake编译"><a href="#6-cmake编译" class="headerlink" title="6.cmake编译"></a>6.cmake编译</h1><p>以管理员身份运行cmake-gui<br>在你想要的文件下创建一个名为example的文件夹，然后在此目录下创建一个source和cmake_bin文件，比如我的：</p><p><img src="/blog_img/PCL配置/18.png" alt=""></p><p>在source里面创建一个cpp文件和CMakeLists.txt文件。<br>CmakeLists.txt里写入以下内容：</p><pre><code>cmake_minimum_required(VERSION 2.6 FATAL_ERROR)project(test)find_package(PCL 1.4 REQUIRED)include_directories($&#123;PCL_INCLUDE_DIRS&#125;)link_directories($&#123;PCL_LIBRARY_DIRS&#125;)  add_definitions($&#123;PCL_DEFINITIONS&#125;)add_executable (test test.cpp)target_link_libraries (test $&#123;PCL_LIBRARIES&#125;)</code></pre><p>其中这个test就是你创建的测试代码的名字，请保持一致，如果你换别的名字，请把txt文件的名字也一起改了。我的如下：<br><img src="/blog_img/PCL配置/19.png" alt=""></p><p>测试代码请网上去找，我用的是上一篇文件里的（里面有个D盘文件的读取可能会报错，但只要能出彩色的那个图就算配置成功了）。</p><p>跟着步骤添加<br><img src="/blog_img/PCL配置/20.png" alt=""></p><p>点击Configure，选x64<br><img src="/blog_img/PCL配置/21.jpg" alt=""></p><p>再点击一次configure<br><img src="/blog_img/PCL配置/22.jpg" alt=""></p><p>点击Generate,出现Generating done.<br><img src="/blog_img/PCL配置/23.png" alt=""></p><p>找到cmake_bin底下的test_sln 打开。<br><img src="/blog_img/PCL配置/24.jpg" alt=""></p><p>将test设置为启动项，并调试。<br><img src="/blog_img/PCL配置/25.png" alt=""></p><p><img src="/blog_img/PCL配置/26.jpg" alt=""></p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;上一篇写的配置可能是最基础的，也是很麻烦，其实可以用cmake来偷个懒，这样就不用附加依赖性已经加入库目录和包含目录了。&lt;br&gt;</summary>
    
    
    
    <category term="pcl" scheme="https://zzygeo.cn/categories/pcl/"/>
    
    
    <category term="-pcl" scheme="https://zzygeo.cn/tags/pcl/"/>
    
  </entry>
  
  <entry>
    <title>C++</title>
    <link href="https://zzygeo.cn/2020/12/19/CPP/"/>
    <id>https://zzygeo.cn/2020/12/19/CPP/</id>
    <published>2020-12-19T10:01:10.000Z</published>
    <updated>2021-02-27T10:14:09.357Z</updated>
    
    <content type="html"><![CDATA[<p>写一些觉得能用上的C++代码：<br><a id="more"></a>)<br>将文本的数字读成数组：  </p><pre><code>#include&lt;iostream&gt;#include&lt;fstream&gt;using namespace std;int main()&#123;    const int txtRow = 201;    const int txtColumn = 8;    float txtData[txtRow][txtColumn];    ifstream infile;    infile.open(&quot;C:\\APP\\C\\Project2\\测试数据.txt&quot;);    for (int i = 0; i &lt; txtRow; i++)    &#123;        for (int j = 0; j &lt; txtColumn; j++)        &#123;            infile &gt;&gt; txtData[i][j];        &#125;    &#125;    infile.close();return 0;&#125;    </code></pre><p>将文本的数字读成矩阵，需要第三方库Eigen。  </p><pre><code>#include&lt;iostream&gt;#include&lt;Eigen/Dense&gt;#include&lt;fstream&gt;#include&lt;cmath&gt;using namespace std;using namespace Eigen;MatrixXd ReadData(istream&amp; data, int a, int b)&#123;    MatrixXd m_matrix(a, b);    for (int i = 0; i &lt; a; i++)    &#123;        for (int j = 0; j &lt; b; j++)        &#123;            data &gt;&gt; m_matrix(i,j);        &#125;    &#125;    return m_matrix;&#125;int main()&#123;    const int row = 201;    const int column = 8;    ifstream infile(&quot;C:\\APP\\C\\Project2\\测试数据.txt&quot;, ios::in);    if (!infile)    &#123;        return 0;    &#125;    MatrixXd m_matrix = ReadData(infile, row, column);return 0;&#125;</code></pre><p>冒泡排序：</p><pre><code>#include&lt;iostream&gt;#include&lt;vector&gt;using namespace std;void display(vector&lt;int&gt; vec)&#123;    for (int i = 0; i &lt; vec.size(); ++i)        cout &lt;&lt; vec[i] &lt;&lt; &#39; &#39;;    cout &lt;&lt; endl;&#125;void swap(int&amp; val1, int&amp; val2)&#123;    int temp = val1;    val1 = val2;    val2 = temp;&#125;void bubble_sort(vector&lt;int&gt;&amp; vec)&#123;    for (int ix = 0; ix &lt; vec.size(); ++ix)        for (int jx = ix + 1; jx &lt; vec.size(); ++jx)            if (vec[ix] &gt; vec[jx])                swap(vec[ix], vec[jx]);&#125;int main()&#123;    int al[8] = &#123; 2,56,4,5,13,7,1,24 &#125;;    vector&lt;int&gt; vec(al, al + 8);    cout &lt;&lt; &quot;before sort:  &quot;;    display(vec);    bubble_sort(vec);    cout &lt;&lt; &quot;after sort: &quot;;    display(vec);    return 0;&#125;</code></pre><p>关键在于swap 和 bubble_sort时，不仅要传值，也要传址，不然只是其值被复制了一份，成为了参数的局部性定义，当运行结束也就从“程序堆栈”里释放掉了，并没有关联起来。</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;写一些觉得能用上的C++代码：&lt;br&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>编译器</title>
    <link href="https://zzygeo.cn/2020/11/26/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    <id>https://zzygeo.cn/2020/11/26/%E7%BC%96%E8%AF%91%E5%99%A8/</id>
    <published>2020-11-25T16:23:05.000Z</published>
    <updated>2021-02-27T10:06:22.858Z</updated>
    
    <content type="html"><![CDATA[<p>鉴于在编译器的配置上花费了一些时间，在两台电脑上都进行了配置，想单独写一篇博客来介绍编译器。持续更新，现在用的是vscode 进行c以及python的使用，具体的链接如下：  <a id="more"></a>)<br><a href="https://blog.csdn.net/m0_45161766/article/details/105729025">vscode配置anaconda环境</a><br>使用python强烈建议直接装一个anaconda全家桶，里面的库很多也很方便管理。<br>2020/11/26更新，vscode for python读取文本总找不到，搜了很多博客也没解决，可能我太菜了，这个VSCODE真不太适合新手。。。   python还是直接pycharm或者jupyter吧，pycharm那点内存对我们搞机的不是简简单单嘛！！！<br><a href="https://www.jb51.net/article/171027.htm">vscode配置C语言环境</a></p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;鉴于在编译器的配置上花费了一些时间，在两台电脑上都进行了配置，想单独写一篇博客来介绍编译器。持续更新，现在用的是vscode 进行c以及python的使用，具体的链接如下：</summary>
    
    
    
    
    <category term="-编译器" scheme="https://zzygeo.cn/tags/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>深度学习篇</title>
    <link href="https://zzygeo.cn/2020/11/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AF%87/"/>
    <id>https://zzygeo.cn/2020/11/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AF%87/</id>
    <published>2020-11-10T16:41:27.000Z</published>
    <updated>2021-02-27T10:08:51.622Z</updated>
    
    <content type="html"><![CDATA[<p>这两天其实做了不少事，时间确实很短，今天和华为的hr小姐姐聊了一会，校招她说3月多就开始了，着实吓到我了，然后还给了我一些鼓励，另外值得高兴的是咨询羊哥的一些问题，他当天就回复了我，这我是没想到的。在这里希望明年的这个时候可以拿到一个不错的offer。</p><p><a id="more"></a>)</p><hr><h1 id="1-深度学习简介"><a href="#1-深度学习简介" class="headerlink" title="1.深度学习简介"></a>1.深度学习简介</h1><p>与其枯坐在房间里思考怎么设计一个识别猫的程序，不如利用人类肉眼在图像中识别猫的能力。我们可以收集一些已知包含猫与不包含猫的真实图像，然后我们的目标就转化成如何从这些图像入手得到一个可以推断出图像中是否有猫的函数。<br>通俗来说，机器学习是一门讨论各式各样的适用于不同问题的函数形式，以及如何使用数据来有效地获取函数参数具体值的学科。深度学习是指机器学习中的一类函数，它们的形式通常为多层神经网络。近年来，仰仗着大数据集和强大的硬件，深度学习已逐渐成为处理图像、文本语料和声音信号等复杂高维度数据的主要方法，算力以及数据集的增长使得机器学习死灰复燃。</p><hr><h2 id="1-1机器学习与深度学习的关系"><a href="#1-1机器学习与深度学习的关系" class="headerlink" title="1.1机器学习与深度学习的关系"></a>1.1机器学习与深度学习的关系</h2><p>机器学习研究如何使计算机系统利用经验改善性能。它是人工智能领域的分支，也是实现人工智能的一种手段。在机器学习的众多研究方向中，表征学习关注如何自动找出表示数据的合适方式，以便更好地将输入变换为正确的输出。<br>深度学习是具有多级表示的表征学习方法。在每一级（从原始数据开始），深度学习通过简单的函数将该级的表示变换为更高级的表示。因此，深度学习模型也可以看作是由许多简单函数复合而成的函数。当这些复合的函数足够多时，深度学习模型就可以表达非常复杂的变换。深度学习可以逐级表示越来越抽象的概念或模式。以图像为例，它的输入是一堆原始像素值。深度学习模型中，图像可以逐级表示为特定位置和角度的边缘、由边缘组合得出的花纹、由多种花纹进一步汇合得到的特定部位的模式等。最终，模型能够较容易根据更高级的表示完成给定的任务，如识别图像中的物体。值得一提的是，作为表征学习的一种，深度学习将自动找出每一级表示数据的合适方式。<br>因此，深度学习的一个外在特点是端到端的训练。也就是说，并不是将单独调试的部分拼凑起来组成一个系统，而是将整个系统组建好之后一起训练。比如说，计算机视觉科学家之前曾一度将特征抽取与机器学习模型的构建分开处理，像是Canny边缘探测和SIFT特征提取 曾占据统治性地位达10年以上，但这也就是人类能找到的最好方法了。当深度学习进入这个领域后，这些特征提取方法就被性能更强的自动优化的逐级过滤器替代了。<br>除端到端的训练以外，我们也正在经历从含参数统计模型转向完全无参数的模型。当数据非常稀缺时，我们需要通过简化对现实的假设来得到实用的模型。当数据充足时，我们就可以用能更好地拟合现实的无参数模型来替代这些含参数模型。这也使我们可以得到更精确的模型，尽管需要牺牲一些可解释性。</p><hr><h2 id="1-2深度学习的资源"><a href="#1-2深度学习的资源" class="headerlink" title="1.2深度学习的资源"></a>1.2深度学习的资源</h2><p>吴恩达的课确实很好，但我更喜欢这种直接上手边看边做的方法，现在跟着花书挺好的，社区也很强大，在这里贴上链接，原书版以及pytorch版的链接。  </p><p><a href="https://github.com/ShusenTang/Dive-into-DL-PyTorch">pytorch</a><br><a href="https://zh.d2l.ai/index.html">原版</a></p><hr><h1 id="2-必要软件"><a href="#2-必要软件" class="headerlink" title="2.必要软件"></a>2.必要软件</h1><p>原书中说明已经很清楚了，因此在这里我只会放一些我使用中所碰见的问题。首先是anaconda的一些知识以及jupyter book的知识，链接如下：</p><p><a href="https://www.zhihu.com/question/58033789/answer/254673663">anaconda</a><br><a href="https://www.zhihu.com/question/46309360/answer/254638807">jupyter_book</a></p><p>在我根据书中的内容安装miniconda以及jupyter book时，在第四步激活了,找不到命令,论坛里也找了找确实也有这个问题，有回答说不是在安装的文件下安装的anaconda。而我自己是直接在安装目录下 Git bash here的，没法用。我寻思是不是没管理员权限，直接搜索栏 cmd，以管理员身份运行。</p><pre><code>cd C:\d2l-zh #安装镜像的文件夹conda activate gluonjupyter notebook</code></pre><p>然后会让你输入一个密钥，在命令行中复制就行。到此这两个安装就算完成了。更多关于anaconda以及jupyter book的使用请看以上两个链接。</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;这两天其实做了不少事，时间确实很短，今天和华为的hr小姐姐聊了一会，校招她说3月多就开始了，着实吓到我了，然后还给了我一些鼓励，另外值得高兴的是咨询羊哥的一些问题，他当天就回复了我，这我是没想到的。在这里希望明年的这个时候可以拿到一个不错的offer。&lt;/p&gt;
&lt;p&gt;</summary>
    
    
    
    
    <category term="-deep learning" scheme="https://zzygeo.cn/tags/deep-learning/"/>
    
  </entry>
  
  <entry>
    <title>日记</title>
    <link href="https://zzygeo.cn/2020/11/07/%E6%97%A5%E8%AE%B0/"/>
    <id>https://zzygeo.cn/2020/11/07/%E6%97%A5%E8%AE%B0/</id>
    <published>2020-11-07T10:53:07.000Z</published>
    <updated>2021-03-13T16:06:23.027Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="76a77bab96a9888c11521a7b39b79b98d7ca5732ac0a00978b5eb4c36d2c4db5"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Welcome to my blog, enter password to read.</summary>
    
    
    
    
    <category term="-日记" scheme="https://zzygeo.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Unable to access &#39;https://gitee.com/自己的项目/&#39;: Could not resolve host: gitee.com问题的解决</title>
    <link href="https://zzygeo.cn/2020/10/23/Unable-to-access-https-gitee-com-%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE-Could-not-resolve-host-gitee-com%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>https://zzygeo.cn/2020/10/23/Unable-to-access-https-gitee-com-%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE-Could-not-resolve-host-gitee-com%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</id>
    <published>2020-10-22T17:28:36.000Z</published>
    <updated>2021-02-27T10:06:02.930Z</updated>
    
    <content type="html"><![CDATA[<p>果然玩hexo报错是在所难免，就好像我已经长大，读研以后乃至以后得日子，可能总是繁琐常伴。今天在hexo d推到GITEE上时，报了错。<br><a id="more"></a>)<br>原因是由于爬梯子代理网络的问题，其实折腾了下。具体哪个步骤解决了这个问题，我也不是很清楚，这次做好记录方便以后继续更新把。</p><p>首先我是从这篇<a href="https://blog.csdn.net/weixin_37166398/article/details/101422239?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.channel_param">博客</a>里查到了我的ip，然后ping了查到的ip，然后在system32\drives\etc\hosts里添加了   </p><pre><code>IP gitee.com</code></pre><p>然而这并没有继续运行成功。<br>然后我有尝试<br>1.管理员身份运行cmd<br>2.输入 </p><pre><code>netsh winsock reset</code></pre><p>3.重启</p><p>还有尝试命令行输入  </p><pre><code>git config --global --unset http.proxy git config --global --unset https.proxy</code></pre><p>最后发现还是不行，结果我把第一步添加的IP gitee.com删了居然好了。</p><p>所以我觉得问题在以下原因，第一个是我没有在打开代理下hexo d,平时确实是没有注意这个问题，但关闭代理下好像有时候也成功过，但这个问题确实出在了代理的问题上。<br>另外就是我的代理导致了无法上传上去，上述的两个操作我也不知道哪个解决了这个问题，毕竟我先添加了IP，然后再试了这两种清楚的。如果下次再出现这个问题，有了结果再继续补充。</p><p>2020/11/17<br>他妈个头的，翻墙今天又部署不上去了，前面的用了也不好使，又试了一下这个更改DNS的方法成功了，<a href="https://blog.csdn.net/weixin_42476786/article/details/82691934?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.add_param_isCf&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.add_param_isCf">链接</a>在这</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;果然玩hexo报错是在所难免，就好像我已经长大，读研以后乃至以后得日子，可能总是繁琐常伴。今天在hexo d推到GITEE上时，报了错。&lt;br&gt;</summary>
    
    
    
    
    <category term="-hexo" scheme="https://zzygeo.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>资源</title>
    <link href="https://zzygeo.cn/2020/10/04/%E8%B5%84%E6%BA%90/"/>
    <id>https://zzygeo.cn/2020/10/04/%E8%B5%84%E6%BA%90/</id>
    <published>2020-10-04T06:53:31.000Z</published>
    <updated>2021-02-27T10:03:35.195Z</updated>
    
    <content type="html"><![CDATA[<p>准备把一些资源都放在这个博客下，持续更新，有需要得自取。</p><h1 id="1-Linux学习笔记"><a href="#1-Linux学习笔记" class="headerlink" title="1.Linux学习笔记"></a>1.Linux学习笔记</h1><p><a href="https://wws.lanzous.com/iKIZfh7eeuh">链接</a></p><h2 id=""><a href="#" class="headerlink" title=")"></a><a id="more"></a>)</h2><h1 id="2-cloud-compare中文版使用手册"><a href="#2-cloud-compare中文版使用手册" class="headerlink" title="2.cloud compare中文版使用手册"></a>2.cloud compare中文版使用手册</h1><p><a href="https://wws.lanzous.com/imyXlh3nide">链接</a></p><hr><h1 id="3-深度学习"><a href="#3-深度学习" class="headerlink" title="3.深度学习"></a>3.深度学习</h1><p><a href="https://www.bilibili.com/video/BV164411m79z?from=search&amp;seid=8194466955642792600">吴恩达深度学习课程</a></p><p><a href="https://www.kesci.com/home/project/5e20243e2823a10036b542da">吴恩达课程配套科目</a></p><p><a href="http://www.ai-start.com/dl2017/">吴恩达深度学习笔记</a></p><hr><h1 id="4-壁纸"><a href="#4-壁纸" class="headerlink" title="4.壁纸"></a>4.壁纸</h1><p><a href="https://wallhaven.cc/">地址</a></p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;准备把一些资源都放在这个博客下，持续更新，有需要得自取。&lt;/p&gt;
&lt;h1 id=&quot;1-Linux学习笔记&quot;&gt;&lt;a href=&quot;#1-Linux学习笔记&quot; class=&quot;headerlink&quot; title=&quot;1.Linux学习笔记&quot;&gt;&lt;/a&gt;1.Linux学习笔记&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://wws.lanzous.com/iKIZfh7eeuh&quot;&gt;链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;)&quot;&gt;&lt;/a&gt;</summary>
    
    
    
    
    <category term="-资源" scheme="https://zzygeo.cn/tags/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>PCL-1-11-Visual-Studio-2019-配置</title>
    <link href="https://zzygeo.cn/2020/10/04/PCL-1-11-Visual-Studio-2019-%E9%85%8D%E7%BD%AE/"/>
    <id>https://zzygeo.cn/2020/10/04/PCL-1-11-Visual-Studio-2019-%E9%85%8D%E7%BD%AE/</id>
    <published>2020-10-04T04:22:26.000Z</published>
    <updated>2021-02-27T10:10:46.058Z</updated>
    
    <content type="html"><![CDATA[<font color= ff size=4 face=""><h1 id="1-软件准备"><a href="#1-软件准备" class="headerlink" title="1.软件准备"></a>1.软件准备</h1><p>1.All in one 安装包。</p><p>2.获取All in one 包对应得PDB文件包，用于后期单步调试。<br><a id="more"></a>)<br>3.获取PCL源码包</p><p>4.安装Visual studio 2019编译器</p><p><img src="/blog_img/PCL配置/1.jpg" alt="示意图"></p><hr><h1 id="2-链接"><a href="#2-链接" class="headerlink" title="2.链接"></a>2.链接</h1><p><a href="https://github.com/PointCloudLibrary/pcl/releases">pcl下载地址</a><br><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">visual studio下载地址</a></p><hr><h1 id="3-安装事项"><a href="#3-安装事项" class="headerlink" title="3.安装事项"></a>3.安装事项</h1><p>为了方便配置，pcl安装目录尽量默认，不默认后续添加目录需要选择对应的位置。</p><p>pcl安装请一定选择创建系统路径，visual studio和cmake安装位置随意，其他选项默认即可。</p><p>pcl安装完成后，请把下载的pcd文件解压，如下图：<br><img src="/blog_img/PCL配置/2.jpg" alt=""></p><p>将所有文件复制，安装到pcl下的BIN文件下<br><img src="/blog_img/PCL配置/3.jpg" alt=""></p><p>检查pcl安装目录下的 3rdParty-OpenNI2是否只有一个安装包（我的是这样），这可能是事先安装过SDK的原因，请卸载了重新安装在OpenNI2下，安装完成如下图：<br><img src="/blog_img/PCL配置/4.jpg" alt=""></p><hr><h1 id="4-关于Visual-studio安装项目"><a href="#4-关于Visual-studio安装项目" class="headerlink" title="4.关于Visual studio安装项目"></a>4.关于Visual studio安装项目</h1><p>我安装了这些负载</p><p><img src="/blog_img/PCL配置/5.png" alt=""></p><hr><h1 id="5-环境配置"><a href="#5-环境配置" class="headerlink" title="5.环境配置"></a>5.环境配置</h1><p>右键我的电脑——高级系统设置-环境变量，在path选项下新建如下几项，根据你pcl安装的位置来：<br><img src="/blog_img/PCL配置/6.jpg" alt=""></p><p>比如我的：<br>C:\Program Files\PCL 1.11.0\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Tools<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Redist</p><p>在系统变量下，配置如下图：<br><img src="/blog_img/PCL配置/6.png" alt=""><br>比如我的：<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Tools<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\bin<br>C:\Program Files\PCL 1.11.0\bin</p><hr><h1 id="6-配置"><a href="#6-配置" class="headerlink" title="6.配置"></a>6.配置</h1><p>打开visual studio，新建一个空项目如图：<br><img src="/blog_img/PCL配置/7.jpg" alt=""></p><p>在release下创建属性表（如果是DEBUG版本请在DEBUG下创建）<br><img src="/blog_img/PCL配置/8.png" alt=""></p><p>切换到解决方案资源管理器，右键-添加-新建项<br><img src="/blog_img/PCL配置/9.png" alt=""></p><p>添加C++文件<br><img src="/blog_img/PCL配置/10.png" alt=""></p><p>接下来配置：<br><img src="/blog_img/PCL配置/11.png" alt=""></p><p>包含目录下添加，建议手点：<br>C:\Program Files\PCL 1.11.0\include\pcl-1.11<br>C:\Program Files\PCL 1.11.0\3rdParty\Boost\include\boost-1_73<br>C:\Program Files\PCL 1.11.0\3rdParty\Eigen\eigen3<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\include<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\include<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\include\vtk-8.2<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Include</p><p>库目录添加：<br>C:\Program Files\PCL 1.11.0\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\Boost\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Lib</p><p>接下来配置：<br><img src="/blog_img/PCL配置/12.jpg" alt=""></p><p>在预处理器定义处添加：<br>BOOST_USE_WINDOWS_H<br>NOMINMAX<br>_CRT_SECURE_NO_DEPRECATE</p><p>在项目属性表（Project_one）和release下创建得属性表（test_one）中把所有选项里得SDL检查全改成否，如下图：</p><p><img src="/blog_img/PCL配置/13.jpg" alt=""></p><p><img src="/blog_img/PCL配置/14.jpg" alt=""></p><hr><h1 id="7-附加依赖项"><a href="#7-附加依赖项" class="headerlink" title="7.附加依赖项"></a>7.附加依赖项</h1><p>将PCL 1.11.0\3rdParty\VTK\lib和PCL 1.11.0\lib这两个文件夹下的lib文件的release版本添加到附加依赖项中（DEBUG版本添加DEBUG类型文件）</p><p><img src="/blog_img/PCL配置/15.png" alt=""></p><p>文件名称我已经归类好了</p><p>release版本：</p><p>pcl_common.lib<br>pcl_features.lib<br>pcl_filters.lib<br>pcl_io.lib<br>pcl_io_ply.lib<br>pcl_kdtree.lib<br>pcl_keypoints.lib<br>pcl_ml.lib<br>pcl_octree.lib<br>pcl_outofcore.lib<br>pcl_people.lib<br>pcl_recognition.lib<br>pcl_registration.lib<br>pcl_sample_consensus.lib<br>pcl_search.lib<br>pcl_segmentation.lib<br>pcl_stereo.lib<br>pcl_surface.lib<br>pcl_tracking.lib<br>pcl_visualization.lib<br>vtkChartsCore-8.2.lib<br>vtkCommonColor-8.2.lib<br>vtkCommonComputationalGeometry-8.2.lib<br>vtkCommonCore-8.2.lib<br>vtkCommonDataModel-8.2.lib<br>vtkCommonExecutionModel-8.2.lib<br>vtkCommonMath-8.2.lib<br>vtkCommonMisc-8.2.lib<br>vtkCommonSystem-8.2.lib<br>vtkCommonTransforms-8.2.lib<br>vtkDICOMParser-8.2.lib<br>vtkDomainsChemistry-8.2.lib<br>vtkDomainsChemistryOpenGL2-8.2.lib<br>vtkdoubleconversion-8.2.lib<br>vtkexodusII-8.2.lib<br>vtkexpat-8.2.lib<br>vtkFiltersAMR-8.2.lib<br>vtkFiltersCore-8.2.lib<br>vtkFiltersExtraction-8.2.lib<br>vtkFiltersFlowPaths-8.2.lib<br>vtkFiltersGeneral-8.2.lib<br>vtkFiltersGeneric-8.2.lib<br>vtkFiltersGeometry-8.2.lib<br>vtkFiltersHybrid-8.2.lib<br>vtkFiltersHyperTree-8.2.lib<br>vtkFiltersImaging-8.2.lib<br>vtkFiltersModeling-8.2.lib<br>vtkFiltersParallel-8.2.lib<br>vtkFiltersParallelImaging-8.2.lib<br>vtkFiltersPoints-8.2.lib<br>vtkFiltersProgrammable-8.2.lib<br>vtkFiltersSelection-8.2.lib<br>vtkFiltersSMP-8.2.lib<br>vtkFiltersSources-8.2.lib<br>vtkFiltersStatistics-8.2.lib<br>vtkFiltersTexture-8.2.lib<br>vtkFiltersTopology-8.2.lib<br>vtkFiltersVerdict-8.2.lib<br>vtkfreetype-8.2.lib<br>vtkGeovisCore-8.2.lib<br>vtkgl2ps-8.2.lib<br>vtkglew-8.2.lib<br>vtkGUISupportMFC-8.2.lib<br>vtkhdf5_hl-8.2.lib<br>vtkhdf5-8.2.lib<br>vtkImagingColor-8.2.lib<br>vtkImagingCore-8.2.lib<br>vtkImagingFourier-8.2.lib<br>vtkImagingGeneral-8.2.lib<br>vtkImagingHybrid-8.2.lib<br>vtkImagingMath-8.2.lib<br>vtkImagingMorphological-8.2.lib<br>vtkImagingSources-8.2.lib<br>vtkImagingStatistics-8.2.lib<br>vtkImagingStencil-8.2.lib<br>vtkInfovisCore-8.2.lib<br>vtkInfovisLayout-8.2.lib<br>vtkInteractionImage-8.2.lib<br>vtkInteractionStyle-8.2.lib<br>vtkInteractionWidgets-8.2.lib<br>vtkIOAMR-8.2.lib<br>vtkIOAsynchronous-8.2.lib<br>vtkIOCityGML-8.2.lib<br>vtkIOCore-8.2.lib<br>vtkIOEnSight-8.2.lib<br>vtkIOExodus-8.2.lib<br>vtkIOExport-8.2.lib<br>vtkIOExportOpenGL2-8.2.lib<br>vtkIOExportPDF-8.2.lib<br>vtkIOGeometry-8.2.lib<br>vtkIOImage-8.2.lib<br>vtkIOImport-8.2.lib<br>vtkIOInfovis-8.2.lib<br>vtkIOLegacy-8.2.lib<br>vtkIOLSDyna-8.2.lib<br>vtkIOMINC-8.2.lib<br>vtkIOMovie-8.2.lib<br>vtkIONetCDF-8.2.lib<br>vtkIOParallel-8.2.lib<br>vtkIOParallelXML-8.2.lib<br>vtkIOPLY-8.2.lib<br>vtkIOSegY-8.2.lib<br>vtkIOSQL-8.2.lib<br>vtkIOTecplotTable-8.2.lib<br>vtkIOVeraOut-8.2.lib<br>vtkIOVideo-8.2.lib<br>vtkIOXML-8.2.lib<br>vtkIOXMLParser-8.2.lib<br>vtkjpeg-8.2.lib<br>vtkjsoncpp-8.2.lib<br>vtklibharu-8.2.lib<br>vtklibxml2-8.2.lib<br>vtklz4-8.2.lib<br>vtklzma-8.2.lib<br>vtkmetaio-8.2.lib<br>vtkNetCDF-8.2.lib<br>vtkogg-8.2.lib<br>vtkParallelCore-8.2.lib<br>vtkpng-8.2.lib<br>vtkproj-8.2.lib<br>vtkpugixml-8.2.lib<br>vtkRenderingAnnotation-8.2.lib<br>vtkRenderingContext2D-8.2.lib<br>vtkRenderingContextOpenGL2-8.2.lib<br>vtkRenderingCore-8.2.lib<br>vtkRenderingExternal-8.2.lib<br>vtkRenderingFreeType-8.2.lib<br>vtkRenderingGL2PSOpenGL2-8.2.lib<br>vtkRenderingImage-8.2.lib<br>vtkRenderingLabel-8.2.lib<br>vtkRenderingLOD-8.2.lib<br>vtkRenderingOpenGL2-8.2.lib<br>vtkRenderingVolume-8.2.lib<br>vtkRenderingVolumeOpenGL2-8.2.lib<br>vtksqlite-8.2.lib<br>vtksys-8.2.lib<br>vtktheora-8.2.lib<br>vtktiff-8.2.lib<br>vtkverdict-8.2.lib<br>vtkViewsContext2D-8.2.lib<br>vtkViewsCore-8.2.lib<br>vtkViewsInfovis-8.2.lib<br>vtkzlib-8.2.lib</p><p>DEBUG版本：</p><p>pcl_commond.lib<br>pcl_featuresd.lib<br>pcl_filtersd.lib<br>pcl_io_plyd.lib<br>pcl_iod.lib<br>pcl_kdtreed.lib<br>pcl_keypointsd.lib<br>pcl_mld.lib<br>pcl_octreed.lib<br>pcl_outofcored.lib<br>pcl_peopled.lib<br>pcl_recognitiond.lib<br>pcl_registrationd.lib<br>pcl_sample_consensusd.lib<br>pcl_searchd.lib<br>pcl_segmentationd.lib<br>pcl_stereod.lib<br>pcl_surfaced.lib<br>pcl_trackingd.lib<br>pcl_visualizationd.lib<br>vtkChartsCore-8.2-gd.lib<br>vtkCommonColor-8.2-gd.lib<br>vtkCommonComputationalGeometry-8.2-gd.lib<br>vtkCommonCore-8.2-gd.lib<br>vtkCommonDataModel-8.2-gd.lib<br>vtkCommonExecutionModel-8.2-gd.lib<br>vtkCommonMath-8.2-gd.lib<br>vtkCommonMisc-8.2-gd.lib<br>vtkCommonSystem-8.2-gd.lib<br>vtkCommonTransforms-8.2-gd.lib<br>vtkDICOMParser-8.2-gd.lib<br>vtkDomainsChemistry-8.2-gd.lib<br>vtkDomainsChemistryOpenGL2-8.2-gd.lib<br>vtkdoubleconversion-8.2-gd.lib<br>vtkexodusII-8.2-gd.lib<br>vtkexpat-8.2-gd.lib<br>vtkFiltersAMR-8.2-gd.lib<br>vtkFiltersCore-8.2-gd.lib<br>vtkFiltersExtraction-8.2-gd.lib<br>vtkFiltersFlowPaths-8.2-gd.lib<br>vtkFiltersGeneral-8.2-gd.lib<br>vtkFiltersGeneric-8.2-gd.lib<br>vtkFiltersGeometry-8.2-gd.lib<br>vtkFiltersHybrid-8.2-gd.lib<br>vtkFiltersHyperTree-8.2-gd.lib<br>vtkFiltersImaging-8.2-gd.lib<br>vtkFiltersModeling-8.2-gd.lib<br>vtkFiltersParallel-8.2-gd.lib<br>vtkFiltersParallelImaging-8.2-gd.lib<br>vtkFiltersPoints-8.2-gd.lib<br>vtkFiltersProgrammable-8.2-gd.lib<br>vtkFiltersSelection-8.2-gd.lib<br>vtkFiltersSMP-8.2-gd.lib<br>vtkFiltersSources-8.2-gd.lib<br>vtkFiltersStatistics-8.2-gd.lib<br>vtkFiltersTexture-8.2-gd.lib<br>vtkFiltersTopology-8.2-gd.lib<br>vtkFiltersVerdict-8.2-gd.lib<br>vtkfreetype-8.2-gd.lib<br>vtkGeovisCore-8.2-gd.lib<br>vtkgl2ps-8.2-gd.lib<br>vtkglew-8.2-gd.lib<br>vtkGUISupportMFC-8.2-gd.lib<br>vtkhdf5_hl-8.2-gd.lib<br>vtkhdf5-8.2-gd.lib<br>vtkImagingColor-8.2-gd.lib<br>vtkImagingCore-8.2-gd.lib<br>vtkImagingFourier-8.2-gd.lib<br>vtkImagingGeneral-8.2-gd.lib<br>vtkImagingHybrid-8.2-gd.lib<br>vtkImagingMath-8.2-gd.lib<br>vtkImagingMorphological-8.2-gd.lib<br>vtkImagingSources-8.2-gd.lib<br>vtkImagingStatistics-8.2-gd.lib<br>vtkImagingStencil-8.2-gd.lib<br>vtkInfovisCore-8.2-gd.lib<br>vtkInfovisLayout-8.2-gd.lib<br>vtkInteractionImage-8.2-gd.lib<br>vtkInteractionStyle-8.2-gd.lib<br>vtkInteractionWidgets-8.2-gd.lib<br>vtkIOAMR-8.2-gd.lib<br>vtkIOAsynchronous-8.2-gd.lib<br>vtkIOCityGML-8.2-gd.lib<br>vtkIOCore-8.2-gd.lib<br>vtkIOEnSight-8.2-gd.lib<br>vtkIOExodus-8.2-gd.lib<br>vtkIOExport-8.2-gd.lib<br>vtkIOExportOpenGL2-8.2-gd.lib<br>vtkIOExportPDF-8.2-gd.lib<br>vtkIOGeometry-8.2-gd.lib<br>vtkIOImage-8.2-gd.lib<br>vtkIOImport-8.2-gd.lib<br>vtkIOInfovis-8.2-gd.lib<br>vtkIOLegacy-8.2-gd.lib<br>vtkIOLSDyna-8.2-gd.lib<br>vtkIOMINC-8.2-gd.lib<br>vtkIOMovie-8.2-gd.lib<br>vtkIONetCDF-8.2-gd.lib<br>vtkIOParallel-8.2-gd.lib<br>vtkIOParallelXML-8.2-gd.lib<br>vtkIOPLY-8.2-gd.lib<br>vtkIOSegY-8.2-gd.lib<br>vtkIOSQL-8.2-gd.lib<br>vtkIOTecplotTable-8.2-gd.lib<br>vtkIOVeraOut-8.2-gd.lib<br>vtkIOVideo-8.2-gd.lib<br>vtkIOXML-8.2-gd.lib<br>vtkIOXMLParser-8.2-gd.lib<br>vtkjpeg-8.2-gd.lib<br>vtkjsoncpp-8.2-gd.lib<br>vtklibharu-8.2-gd.lib<br>vtklibxml2-8.2-gd.lib<br>vtklz4-8.2-gd.lib<br>vtklzma-8.2-gd.lib<br>vtkmetaio-8.2-gd.lib<br>vtkNetCDF-8.2-gd.lib<br>vtkogg-8.2-gd.lib<br>vtkParallelCore-8.2-gd.lib<br>vtkpng-8.2-gd.lib<br>vtkproj-8.2-gd.lib<br>vtkpugixml-8.2-gd.lib<br>vtkRenderingAnnotation-8.2-gd.lib<br>vtkRenderingContext2D-8.2-gd.lib<br>vtkRenderingContextOpenGL2-8.2-gd.lib<br>vtkRenderingCore-8.2-gd.lib<br>vtkRenderingExternal-8.2-gd.lib<br>vtkRenderingFreeType-8.2-gd.lib<br>vtkRenderingGL2PSOpenGL2-8.2-gd.lib<br>vtkRenderingImage-8.2-gd.lib<br>vtkRenderingLabel-8.2-gd.lib<br>vtkRenderingLOD-8.2-gd.lib<br>vtkRenderingOpenGL2-8.2-gd.lib<br>vtkRenderingVolume-8.2-gd.lib<br>vtkRenderingVolumeOpenGL2-8.2-gd.lib<br>vtksqlite-8.2-gd.lib<br>vtksys-8.2-gd.lib<br>vtktheora-8.2-gd.lib<br>vtktiff-8.2-gd.lib<br>vtkverdict-8.2-gd.lib<br>vtkViewsContext2D-8.2-gd.lib<br>vtkViewsCore-8.2-gd.lib<br>vtkViewsInfovis-8.2-gd.lib<br>vtkzlib-8.2-gd.lib</p><h1 id="8-程序测试"><a href="#8-程序测试" class="headerlink" title="8.程序测试"></a>8.程序测试</h1><pre><code>#include &lt;pcl/visualization/cloud_viewer.h&gt;  #include &lt;iostream&gt;  #include &lt;pcl/io/io.h&gt;  #include &lt;pcl/io/pcd_io.h&gt;  int user_data;void viewerOneOff(pcl::visualization::PCLVisualizer&amp; viewer)&#123;    viewer.setBackgroundColor(1.0, 0.5, 1.0);    pcl::PointXYZ o;    o.x = 1.0;    o.y = 0;    o.z = 0;    viewer.addSphere(o, 0.25, &quot;sphere&quot;, 0);    std::cout &lt;&lt; &quot;i only run once&quot; &lt;&lt; std::endl;&#125;void viewerPsycho(pcl::visualization::PCLVisualizer&amp; viewer)&#123;    static unsigned count = 0;    std::stringstream ss;    ss &lt;&lt; &quot;Once per viewer loop: &quot; &lt;&lt; count++;    viewer.removeShape(&quot;text&quot;, 0);    viewer.addText(ss.str(), 200, 300, &quot;text&quot;, 0);    //FIXME: possible race condition here:      user_data++;&#125;int main()&#123;    pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;::Ptr cloud(new pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;);    pcl::io::loadPCDFile(&quot;D:\\Microsoft Visual Studio 10.0\\Projects\\pcl\\pcl\\my_point_cloud.pcd&quot;, *cloud);    pcl::visualization::CloudViewer viewer(&quot;Cloud Viewer&quot;);    //blocks until the cloud is actually rendered      viewer.showCloud(cloud);    //use the following functions to get access to the underlying more advanced/powerful      //PCLVisualizer      //This will only get called once      viewer.runOnVisualizationThreadOnce(viewerOneOff);    //This will get called once per visualization iteration      viewer.runOnVisualizationThread(viewerPsycho);    while (!viewer.wasStopped())    &#123;        //you can also do cool processing here          //FIXME: Note that this is running in a separate thread from viewerPsycho          //and you should guard against race conditions yourself...          user_data++;    &#125;    return 0;&#125;</code></pre><p>测试结果：</p><p><img src="/blog_img/PCL配置/16.png" alt=""></p><hr>]]></content>
    
    
    <summary type="html">&lt;font color= ff size=4 face=&quot;&quot;&gt;

&lt;h1 id=&quot;1-软件准备&quot;&gt;&lt;a href=&quot;#1-软件准备&quot; class=&quot;headerlink&quot; title=&quot;1.软件准备&quot;&gt;&lt;/a&gt;1.软件准备&lt;/h1&gt;&lt;p&gt;1.All in one 安装包。&lt;/p&gt;
&lt;p&gt;2.获取All in one 包对应得PDB文件包，用于后期单步调试。&lt;br&gt;</summary>
    
    
    
    
    <category term="-pcl" scheme="https://zzygeo.cn/tags/pcl/"/>
    
  </entry>
  
  <entry>
    <title>hexo d 出现错误的用户名和密码的解决办法</title>
    <link href="https://zzygeo.cn/2020/10/02/hexo-d-%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://zzygeo.cn/2020/10/02/hexo-d-%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2020-10-02T05:27:01.000Z</published>
    <updated>2021-02-27T10:15:12.482Z</updated>
    
    <content type="html"><![CDATA[<p>在windows搜索栏输入：控制面板<a id="more"></a>)<br><img src="/blog_img/hexo d时错误用户名和密码解决办法/1.png" alt=""><br>然后点击：<br><img src="/blog_img/hexo d时错误用户名和密码解决办法/2.png" alt=""><br><img src="/blog_img/hexo d时错误用户名和密码解决办法/3.png" alt=""><br><img src="/blog_img/hexo d时错误用户名和密码解决办法/4.png" alt=""></p><p>点进去就可以更改用户名和密码了</p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;在windows搜索栏输入：控制面板</summary>
    
    
    
    <category term="hexo" scheme="https://zzygeo.cn/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>新电脑上部署hexo</title>
    <link href="https://zzygeo.cn/2020/10/02/%E6%96%B0%E7%94%B5%E8%84%91%E4%B8%8A%E9%83%A8%E7%BD%B2hexo/"/>
    <id>https://zzygeo.cn/2020/10/02/%E6%96%B0%E7%94%B5%E8%84%91%E4%B8%8A%E9%83%A8%E7%BD%B2hexo/</id>
    <published>2020-10-02T05:07:29.000Z</published>
    <updated>2021-02-27T10:08:19.541Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安装必要软件"><a href="#1-安装必要软件" class="headerlink" title="1. 安装必要软件"></a>1. 安装必要软件</h1><p>安装 Git 客户端<br>安装 node JS</p><p><a id="more"></a>)</p><hr><h1 id="2-拷贝源文件"><a href="#2-拷贝源文件" class="headerlink" title="2. 拷贝源文件"></a>2. 拷贝源文件</h1><p>将初始电脑上个人博客文件夹下这几个文件夹拷到当前新电脑的准备设置的博客路径下。</p><pre><code>_config.ymlpackage.jsonscaffolds/source/themes/</code></pre><hr><h1 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h1><p>在 cmd 下输入下面指令安装 hexo:</p><pre><code>npm install -g hexo</code></pre><hr><h1 id="4-在新博客路径下，安装三方依赖库"><a href="#4-在新博客路径下，安装三方依赖库" class="headerlink" title="4. 在新博客路径下，安装三方依赖库"></a>4. 在新博客路径下，安装三方依赖库</h1><pre><code>npm installnpm install hexo-deployer-git --save //文章部署到 git 的模块npm install 主题需要的插件</code></pre><p><strong>千万别hxeo init</strong>，不然你就拉在裤子里了！！！</p><hr><h1 id="5-GITHUB-gitee-添加-SSH-KEYS"><a href="#5-GITHUB-gitee-添加-SSH-KEYS" class="headerlink" title="5. GITHUB/gitee 添加 SSH KEYS"></a>5. GITHUB/gitee 添加 SSH KEYS</h1><p>在GitHub/gitee的ssh keys那里再添加一个当前电脑的环境生成的key，但是可别把原来的电脑删掉了啊。<br>首先在本地创建 SSH Keys:</p><pre><code>ssh-keygen -t rsa -C “xxxx@xxxx.com“</code></pre><p>后面的邮箱即为 github/gitee注册邮箱，也是你登录Github的邮箱（其实无关紧要，只是为了辨识生成的用户名），之后会要求确认路径和输入密码，一路回车就行。<br>成功的话会在git bash页面下看到生成的 .ssh文件夹路径，进去，打开 id_rsa.pub，复制里面的key（全选）即可。然后拷贝到 Github/gitee 的 SSH Keys(这里要添加一个新的)<br>然后在终端中，我们再次测试下公钥有没有添加成功：</p><pre><code>ssh -T git@gitee.com </code></pre><p>会弹出确认命令，输入yes,会弹出你的名字等等，会出现：</p><pre><code>Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></pre><p>然后：</p><pre><code>hexo ghexo shexo d</code></pre><hr>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;1-安装必要软件&quot;&gt;&lt;a href=&quot;#1-安装必要软件&quot; class=&quot;headerlink&quot; title=&quot;1. 安装必要软件&quot;&gt;&lt;/a&gt;1. 安装必要软件&lt;/h1&gt;&lt;p&gt;安装 Git 客户端&lt;br&gt;安装 node JS&lt;/p&gt;
&lt;p&gt;</summary>
    
    
    
    
    <category term="-hexo" scheme="https://zzygeo.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>我的Office激活码</title>
    <link href="https://zzygeo.cn/2020/09/26/%E6%88%91%E7%9A%84Office%E6%BF%80%E6%B4%BB%E7%A0%81/"/>
    <id>https://zzygeo.cn/2020/09/26/%E6%88%91%E7%9A%84Office%E6%BF%80%E6%B4%BB%E7%A0%81/</id>
    <published>2020-09-26T05:05:29.000Z</published>
    <updated>2021-02-27T13:00:46.993Z</updated>
    
    <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="bf6efb1b84774a2219f9812618a959ba3db53f385988578e06fe6ce89eff9fb2">02d8f3e4749f5d3e7d8e79594d95ed2c83a0c853318081784b8675dcb0ac497684af15a8eba28634192f45576b5d8fa72f2e5a82d72b45810a41ae2b2f54b26ce8192bdd743e7da220f0eab5b5e90968e9a39d2a27335c5e1017379ea0154b1c4effc1192bc47fe07bd180802949793b45e14a3a57a6400a16b04678ee15a7d4d9bc5004f7f32c767cf8e772f23e0a91fd7905908a60bb2454e70b0a00d16f754b1aa8b3ead233ceea89c399a99940f140594b49d1c9666704cbcdfcc1e4832c232a5e1d8dda05a462be7996134efb532c678acdbed8a251de5591fc8114e387356b4ee40ab94ef7a4a6424760ec693befe457f71837b06bd1d602fce903564692c4ec2173d085e4f47e35d5978364d4a8f2bd5eeac4539503123d5118a0a1877997994f02b20888042a953e457b8fc2179ee6d7d6e6744f641db7c44a89545b</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Welcome to my blog, enter password to read.</summary>
    
    
    
    
    <category term="-office" scheme="https://zzygeo.cn/tags/office/"/>
    
  </entry>
  
</feed>
