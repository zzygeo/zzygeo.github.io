<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>PCL-1-11-Visual-Studio-2019-配置</title>
    <url>/2020/10/04/PCL-1-11-Visual-Studio-2019-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<font color= ff size=4 face="">

<h1 id="1-软件准备"><a href="#1-软件准备" class="headerlink" title="1.软件准备"></a>1.软件准备</h1><p>1.All in one 安装包。</p>
<p>2.获取All in one 包对应得PDB文件包，用于后期单步调试。</p>
<p>3.获取PCL源码包</p>
<p>4.安装Visual studio 2019编译器</p>
<p><img src="/blog_img/PCL配置/1.jpg" alt="示意图"></p>
<h1 id="2-链接"><a href="#2-链接" class="headerlink" title="2.链接"></a>2.链接</h1><p><a href="https://github.com/PointCloudLibrary/pcl/releases">pcl下载地址</a><br><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">visual studio下载地址</a></p>
<h1 id="3-安装事项"><a href="#3-安装事项" class="headerlink" title="3.安装事项"></a>3.安装事项</h1><p>为了方便配置，pcl安装目录尽量默认，不默认后续添加目录需要选择对应的位置。</p>
<p>pcl安装请一定选择创建系统路径，visual studio和cmake安装位置随意，其他选项默认即可。</p>
<p>pcl安装完成后，请把下载的pcd文件解压，如下图：<br><img src="/blog_img/PCL配置/2.jpg" alt=""></p>
<p>将所有文件复制，安装到pcl下的BIN文件下<br><img src="/blog_img/PCL配置/3.jpg" alt=""></p>
<p>检查pcl安装目录下的 3rdParty-OpenNI2是否只有一个安装包（我的是这样），这可能是事先安装过SDK的原因，请卸载了重新安装在OpenNI2下，安装完成如下图：<br><img src="/blog_img/PCL配置/4.jpg" alt=""></p>
<h1 id="4-关于Visual-studio安装项目"><a href="#4-关于Visual-studio安装项目" class="headerlink" title="4.关于Visual studio安装项目"></a>4.关于Visual studio安装项目</h1><p>我安装了这些负载</p>
<p><img src="/blog_img/PCL配置/5.png" alt=""></p>
<h1 id="5-环境配置"><a href="#5-环境配置" class="headerlink" title="5.环境配置"></a>5.环境配置</h1><p>右键我的电脑——高级系统设置-环境变量，在path选项下新建如下几项，根据你pcl安装的位置来：<br><img src="/blog_img/PCL配置/6.jpg" alt=""></p>
<p>比如我的：<br>C:\Program Files\PCL 1.11.0\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Tools<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Redist</p>
<p>在系统变量下，配置如下图：<br><img src="/blog_img/PCL配置/6.png" alt=""><br>比如我的：<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Tools<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\bin<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\bin<br>C:\Program Files\PCL 1.11.0\bin</p>
<h1 id="6-配置"><a href="#6-配置" class="headerlink" title="6.配置"></a>6.配置</h1><p>打开visual studio，新建一个空项目如图：<br><img src="/blog_img/PCL配置/7.jpg" alt=""></p>
<p>在release下创建属性表（如果是DEBUG版本请在DEBUG下创建）<br><img src="/blog_img/PCL配置/8.png" alt=""></p>
<p>切换到解决方案资源管理器，右键-添加-新建项<br><img src="/blog_img/PCL配置/9.png" alt=""></p>
<p>添加C++文件<br><img src="/blog_img/PCL配置/10.png" alt=""></p>
<p>接下来配置：<br><img src="/blog_img/PCL配置/11.png" alt=""></p>
<p>包含目录下添加，建议手点：<br>C:\Program Files\PCL 1.11.0\include\pcl-1.11<br>C:\Program Files\PCL 1.11.0\3rdParty\Boost\include\boost-1_73<br>C:\Program Files\PCL 1.11.0\3rdParty\Eigen\eigen3<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\include<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\include<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\include\vtk-8.2<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Include</p>
<p>库目录添加：<br>C:\Program Files\PCL 1.11.0\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\Boost\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\FLANN\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\Qhull\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\VTK\lib<br>C:\Program Files\PCL 1.11.0\3rdParty\OpenNI2\Lib</p>
<p>接下来配置：<br><img src="/blog_img/PCL配置/12.jpg" alt=""></p>
<p>在预处理器定义处添加：<br>BOOST_USE_WINDOWS_H<br>NOMINMAX<br>_CRT_SECURE_NO_DEPRECATE</p>
<p>在项目属性表（Project_one）和release下创建得属性表（test_one）中把所有选项里得SDL检查全改成否，如下图：</p>
<p><img src="/blog_img/PCL配置/13.jpg" alt=""></p>
<p><img src="/blog_img/PCL配置/14.jpg" alt=""></p>
<h1 id="7-附加依赖项"><a href="#7-附加依赖项" class="headerlink" title="7.附加依赖项"></a>7.附加依赖项</h1><p>将PCL 1.11.0\3rdParty\VTK\lib和PCL 1.11.0\lib这两个文件夹下的lib文件的release版本添加到附加依赖项中（DEBUG版本添加DEBUG类型文件）</p>
<p><img src="/blog_img/PCL配置/15.png" alt=""></p>
<p>文件名称我已经归类好了</p>
<p>release版本：</p>
<p>pcl_common.lib<br>pcl_features.lib<br>pcl_filters.lib<br>pcl_io.lib<br>pcl_io_ply.lib<br>pcl_kdtree.lib<br>pcl_keypoints.lib<br>pcl_ml.lib<br>pcl_octree.lib<br>pcl_outofcore.lib<br>pcl_people.lib<br>pcl_recognition.lib<br>pcl_registration.lib<br>pcl_sample_consensus.lib<br>pcl_search.lib<br>pcl_segmentation.lib<br>pcl_stereo.lib<br>pcl_surface.lib<br>pcl_tracking.lib<br>pcl_visualization.lib<br>vtkChartsCore-8.2.lib<br>vtkCommonColor-8.2.lib<br>vtkCommonComputationalGeometry-8.2.lib<br>vtkCommonCore-8.2.lib<br>vtkCommonDataModel-8.2.lib<br>vtkCommonExecutionModel-8.2.lib<br>vtkCommonMath-8.2.lib<br>vtkCommonMisc-8.2.lib<br>vtkCommonSystem-8.2.lib<br>vtkCommonTransforms-8.2.lib<br>vtkDICOMParser-8.2.lib<br>vtkDomainsChemistry-8.2.lib<br>vtkDomainsChemistryOpenGL2-8.2.lib<br>vtkdoubleconversion-8.2.lib<br>vtkexodusII-8.2.lib<br>vtkexpat-8.2.lib<br>vtkFiltersAMR-8.2.lib<br>vtkFiltersCore-8.2.lib<br>vtkFiltersExtraction-8.2.lib<br>vtkFiltersFlowPaths-8.2.lib<br>vtkFiltersGeneral-8.2.lib<br>vtkFiltersGeneric-8.2.lib<br>vtkFiltersGeometry-8.2.lib<br>vtkFiltersHybrid-8.2.lib<br>vtkFiltersHyperTree-8.2.lib<br>vtkFiltersImaging-8.2.lib<br>vtkFiltersModeling-8.2.lib<br>vtkFiltersParallel-8.2.lib<br>vtkFiltersParallelImaging-8.2.lib<br>vtkFiltersPoints-8.2.lib<br>vtkFiltersProgrammable-8.2.lib<br>vtkFiltersSelection-8.2.lib<br>vtkFiltersSMP-8.2.lib<br>vtkFiltersSources-8.2.lib<br>vtkFiltersStatistics-8.2.lib<br>vtkFiltersTexture-8.2.lib<br>vtkFiltersTopology-8.2.lib<br>vtkFiltersVerdict-8.2.lib<br>vtkfreetype-8.2.lib<br>vtkGeovisCore-8.2.lib<br>vtkgl2ps-8.2.lib<br>vtkglew-8.2.lib<br>vtkGUISupportMFC-8.2.lib<br>vtkhdf5_hl-8.2.lib<br>vtkhdf5-8.2.lib<br>vtkImagingColor-8.2.lib<br>vtkImagingCore-8.2.lib<br>vtkImagingFourier-8.2.lib<br>vtkImagingGeneral-8.2.lib<br>vtkImagingHybrid-8.2.lib<br>vtkImagingMath-8.2.lib<br>vtkImagingMorphological-8.2.lib<br>vtkImagingSources-8.2.lib<br>vtkImagingStatistics-8.2.lib<br>vtkImagingStencil-8.2.lib<br>vtkInfovisCore-8.2.lib<br>vtkInfovisLayout-8.2.lib<br>vtkInteractionImage-8.2.lib<br>vtkInteractionStyle-8.2.lib<br>vtkInteractionWidgets-8.2.lib<br>vtkIOAMR-8.2.lib<br>vtkIOAsynchronous-8.2.lib<br>vtkIOCityGML-8.2.lib<br>vtkIOCore-8.2.lib<br>vtkIOEnSight-8.2.lib<br>vtkIOExodus-8.2.lib<br>vtkIOExport-8.2.lib<br>vtkIOExportOpenGL2-8.2.lib<br>vtkIOExportPDF-8.2.lib<br>vtkIOGeometry-8.2.lib<br>vtkIOImage-8.2.lib<br>vtkIOImport-8.2.lib<br>vtkIOInfovis-8.2.lib<br>vtkIOLegacy-8.2.lib<br>vtkIOLSDyna-8.2.lib<br>vtkIOMINC-8.2.lib<br>vtkIOMovie-8.2.lib<br>vtkIONetCDF-8.2.lib<br>vtkIOParallel-8.2.lib<br>vtkIOParallelXML-8.2.lib<br>vtkIOPLY-8.2.lib<br>vtkIOSegY-8.2.lib<br>vtkIOSQL-8.2.lib<br>vtkIOTecplotTable-8.2.lib<br>vtkIOVeraOut-8.2.lib<br>vtkIOVideo-8.2.lib<br>vtkIOXML-8.2.lib<br>vtkIOXMLParser-8.2.lib<br>vtkjpeg-8.2.lib<br>vtkjsoncpp-8.2.lib<br>vtklibharu-8.2.lib<br>vtklibxml2-8.2.lib<br>vtklz4-8.2.lib<br>vtklzma-8.2.lib<br>vtkmetaio-8.2.lib<br>vtkNetCDF-8.2.lib<br>vtkogg-8.2.lib<br>vtkParallelCore-8.2.lib<br>vtkpng-8.2.lib<br>vtkproj-8.2.lib<br>vtkpugixml-8.2.lib<br>vtkRenderingAnnotation-8.2.lib<br>vtkRenderingContext2D-8.2.lib<br>vtkRenderingContextOpenGL2-8.2.lib<br>vtkRenderingCore-8.2.lib<br>vtkRenderingExternal-8.2.lib<br>vtkRenderingFreeType-8.2.lib<br>vtkRenderingGL2PSOpenGL2-8.2.lib<br>vtkRenderingImage-8.2.lib<br>vtkRenderingLabel-8.2.lib<br>vtkRenderingLOD-8.2.lib<br>vtkRenderingOpenGL2-8.2.lib<br>vtkRenderingVolume-8.2.lib<br>vtkRenderingVolumeOpenGL2-8.2.lib<br>vtksqlite-8.2.lib<br>vtksys-8.2.lib<br>vtktheora-8.2.lib<br>vtktiff-8.2.lib<br>vtkverdict-8.2.lib<br>vtkViewsContext2D-8.2.lib<br>vtkViewsCore-8.2.lib<br>vtkViewsInfovis-8.2.lib<br>vtkzlib-8.2.lib</p>
<p>DEBUG版本：</p>
<p>pcl_commond.lib<br>pcl_featuresd.lib<br>pcl_filtersd.lib<br>pcl_io_plyd.lib<br>pcl_iod.lib<br>pcl_kdtreed.lib<br>pcl_keypointsd.lib<br>pcl_mld.lib<br>pcl_octreed.lib<br>pcl_outofcored.lib<br>pcl_peopled.lib<br>pcl_recognitiond.lib<br>pcl_registrationd.lib<br>pcl_sample_consensusd.lib<br>pcl_searchd.lib<br>pcl_segmentationd.lib<br>pcl_stereod.lib<br>pcl_surfaced.lib<br>pcl_trackingd.lib<br>pcl_visualizationd.lib<br>vtkChartsCore-8.2-gd.lib<br>vtkCommonColor-8.2-gd.lib<br>vtkCommonComputationalGeometry-8.2-gd.lib<br>vtkCommonCore-8.2-gd.lib<br>vtkCommonDataModel-8.2-gd.lib<br>vtkCommonExecutionModel-8.2-gd.lib<br>vtkCommonMath-8.2-gd.lib<br>vtkCommonMisc-8.2-gd.lib<br>vtkCommonSystem-8.2-gd.lib<br>vtkCommonTransforms-8.2-gd.lib<br>vtkDICOMParser-8.2-gd.lib<br>vtkDomainsChemistry-8.2-gd.lib<br>vtkDomainsChemistryOpenGL2-8.2-gd.lib<br>vtkdoubleconversion-8.2-gd.lib<br>vtkexodusII-8.2-gd.lib<br>vtkexpat-8.2-gd.lib<br>vtkFiltersAMR-8.2-gd.lib<br>vtkFiltersCore-8.2-gd.lib<br>vtkFiltersExtraction-8.2-gd.lib<br>vtkFiltersFlowPaths-8.2-gd.lib<br>vtkFiltersGeneral-8.2-gd.lib<br>vtkFiltersGeneric-8.2-gd.lib<br>vtkFiltersGeometry-8.2-gd.lib<br>vtkFiltersHybrid-8.2-gd.lib<br>vtkFiltersHyperTree-8.2-gd.lib<br>vtkFiltersImaging-8.2-gd.lib<br>vtkFiltersModeling-8.2-gd.lib<br>vtkFiltersParallel-8.2-gd.lib<br>vtkFiltersParallelImaging-8.2-gd.lib<br>vtkFiltersPoints-8.2-gd.lib<br>vtkFiltersProgrammable-8.2-gd.lib<br>vtkFiltersSelection-8.2-gd.lib<br>vtkFiltersSMP-8.2-gd.lib<br>vtkFiltersSources-8.2-gd.lib<br>vtkFiltersStatistics-8.2-gd.lib<br>vtkFiltersTexture-8.2-gd.lib<br>vtkFiltersTopology-8.2-gd.lib<br>vtkFiltersVerdict-8.2-gd.lib<br>vtkfreetype-8.2-gd.lib<br>vtkGeovisCore-8.2-gd.lib<br>vtkgl2ps-8.2-gd.lib<br>vtkglew-8.2-gd.lib<br>vtkGUISupportMFC-8.2-gd.lib<br>vtkhdf5_hl-8.2-gd.lib<br>vtkhdf5-8.2-gd.lib<br>vtkImagingColor-8.2-gd.lib<br>vtkImagingCore-8.2-gd.lib<br>vtkImagingFourier-8.2-gd.lib<br>vtkImagingGeneral-8.2-gd.lib<br>vtkImagingHybrid-8.2-gd.lib<br>vtkImagingMath-8.2-gd.lib<br>vtkImagingMorphological-8.2-gd.lib<br>vtkImagingSources-8.2-gd.lib<br>vtkImagingStatistics-8.2-gd.lib<br>vtkImagingStencil-8.2-gd.lib<br>vtkInfovisCore-8.2-gd.lib<br>vtkInfovisLayout-8.2-gd.lib<br>vtkInteractionImage-8.2-gd.lib<br>vtkInteractionStyle-8.2-gd.lib<br>vtkInteractionWidgets-8.2-gd.lib<br>vtkIOAMR-8.2-gd.lib<br>vtkIOAsynchronous-8.2-gd.lib<br>vtkIOCityGML-8.2-gd.lib<br>vtkIOCore-8.2-gd.lib<br>vtkIOEnSight-8.2-gd.lib<br>vtkIOExodus-8.2-gd.lib<br>vtkIOExport-8.2-gd.lib<br>vtkIOExportOpenGL2-8.2-gd.lib<br>vtkIOExportPDF-8.2-gd.lib<br>vtkIOGeometry-8.2-gd.lib<br>vtkIOImage-8.2-gd.lib<br>vtkIOImport-8.2-gd.lib<br>vtkIOInfovis-8.2-gd.lib<br>vtkIOLegacy-8.2-gd.lib<br>vtkIOLSDyna-8.2-gd.lib<br>vtkIOMINC-8.2-gd.lib<br>vtkIOMovie-8.2-gd.lib<br>vtkIONetCDF-8.2-gd.lib<br>vtkIOParallel-8.2-gd.lib<br>vtkIOParallelXML-8.2-gd.lib<br>vtkIOPLY-8.2-gd.lib<br>vtkIOSegY-8.2-gd.lib<br>vtkIOSQL-8.2-gd.lib<br>vtkIOTecplotTable-8.2-gd.lib<br>vtkIOVeraOut-8.2-gd.lib<br>vtkIOVideo-8.2-gd.lib<br>vtkIOXML-8.2-gd.lib<br>vtkIOXMLParser-8.2-gd.lib<br>vtkjpeg-8.2-gd.lib<br>vtkjsoncpp-8.2-gd.lib<br>vtklibharu-8.2-gd.lib<br>vtklibxml2-8.2-gd.lib<br>vtklz4-8.2-gd.lib<br>vtklzma-8.2-gd.lib<br>vtkmetaio-8.2-gd.lib<br>vtkNetCDF-8.2-gd.lib<br>vtkogg-8.2-gd.lib<br>vtkParallelCore-8.2-gd.lib<br>vtkpng-8.2-gd.lib<br>vtkproj-8.2-gd.lib<br>vtkpugixml-8.2-gd.lib<br>vtkRenderingAnnotation-8.2-gd.lib<br>vtkRenderingContext2D-8.2-gd.lib<br>vtkRenderingContextOpenGL2-8.2-gd.lib<br>vtkRenderingCore-8.2-gd.lib<br>vtkRenderingExternal-8.2-gd.lib<br>vtkRenderingFreeType-8.2-gd.lib<br>vtkRenderingGL2PSOpenGL2-8.2-gd.lib<br>vtkRenderingImage-8.2-gd.lib<br>vtkRenderingLabel-8.2-gd.lib<br>vtkRenderingLOD-8.2-gd.lib<br>vtkRenderingOpenGL2-8.2-gd.lib<br>vtkRenderingVolume-8.2-gd.lib<br>vtkRenderingVolumeOpenGL2-8.2-gd.lib<br>vtksqlite-8.2-gd.lib<br>vtksys-8.2-gd.lib<br>vtktheora-8.2-gd.lib<br>vtktiff-8.2-gd.lib<br>vtkverdict-8.2-gd.lib<br>vtkViewsContext2D-8.2-gd.lib<br>vtkViewsCore-8.2-gd.lib<br>vtkViewsInfovis-8.2-gd.lib<br>vtkzlib-8.2-gd.lib</p>
<h1 id="8-程序测试"><a href="#8-程序测试" class="headerlink" title="8.程序测试"></a>8.程序测试</h1><pre><code>#include &lt;pcl/visualization/cloud_viewer.h&gt;  
#include &lt;iostream&gt;  
#include &lt;pcl/io/io.h&gt;  
#include &lt;pcl/io/pcd_io.h&gt;  
int user_data;
void viewerOneOff(pcl::visualization::PCLVisualizer&amp; viewer)
&#123;
    viewer.setBackgroundColor(1.0, 0.5, 1.0);
    pcl::PointXYZ o;
    o.x = 1.0;
    o.y = 0;
    o.z = 0;
    viewer.addSphere(o, 0.25, &quot;sphere&quot;, 0);
    std::cout &lt;&lt; &quot;i only run once&quot; &lt;&lt; std::endl;
&#125;
void viewerPsycho(pcl::visualization::PCLVisualizer&amp; viewer)
&#123;
    static unsigned count = 0;
    std::stringstream ss;
    ss &lt;&lt; &quot;Once per viewer loop: &quot; &lt;&lt; count++;
    viewer.removeShape(&quot;text&quot;, 0);
    viewer.addText(ss.str(), 200, 300, &quot;text&quot;, 0);
    //FIXME: possible race condition here:  
    user_data++;
&#125;
int main()
&#123;
    pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;::Ptr cloud(new pcl::PointCloud&lt;pcl::PointXYZRGBA&gt;);
    pcl::io::loadPCDFile(&quot;D:\\Microsoft Visual Studio 10.0\\Projects\\pcl\\pcl\\my_point_cloud.pcd&quot;, *cloud);
    pcl::visualization::CloudViewer viewer(&quot;Cloud Viewer&quot;);
    //blocks until the cloud is actually rendered  
    viewer.showCloud(cloud);
    //use the following functions to get access to the underlying more advanced/powerful  
    //PCLVisualizer  
    //This will only get called once  
    viewer.runOnVisualizationThreadOnce(viewerOneOff);
    //This will get called once per visualization iteration  
    viewer.runOnVisualizationThread(viewerPsycho);
    while (!viewer.wasStopped())
    &#123;
        //you can also do cool processing here  
        //FIXME: Note that this is running in a separate thread from viewerPsycho  
        //and you should guard against race conditions yourself...  
        user_data++;
    &#125;
    return 0;
&#125;
</code></pre><p>测试结果：</p>
<p><img src="/blog_img/PCL配置/16.png" alt=""></p>
<hr>
]]></content>
      <categories>
        <category>pcl</category>
      </categories>
      <tags>
        <tag>-pcl -visual studio</tag>
      </tags>
  </entry>
  <entry>
    <title>Youtube视频下载</title>
    <url>/2020/09/26/Youbute%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<p><font color=# ff size=23 face="黑体">Youtube视频下载</font>&lt;/p&gt;</p>
<h1 id="1-4K视频下载"><a href="#1-4K视频下载" class="headerlink" title="1.4K视频下载"></a>1.4K视频下载</h1><p><a href="https://distillvideo.com/">下载地址</a></p>
<h1 id="2-油猴插件脚本"><a href="#2-油猴插件脚本" class="headerlink" title="2.油猴插件脚本"></a>2.油猴插件脚本</h1><p>参考我的这篇<a href="https://zzygeo.gitee.io/2020/09/26/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%A5%E5%8F%8A%E6%8F%92%E4%BB%B6/">博客</a>油猴插件</p>
<h1 id="3-1080p下载"><a href="#3-1080p下载" class="headerlink" title="3.1080p下载"></a>3.1080p下载</h1><p><a href="https://www.y2mate.com/en60">下载地址</a></p>
<hr>
]]></content>
      <categories>
        <category>Youbute</category>
      </categories>
      <tags>
        <tag>-Youtube</tag>
      </tags>
  </entry>
  <entry>
    <title>Unable to access &#39;https://gitee.com/自己的项目/&#39;: Could not resolve host: gitee.com问题的解决</title>
    <url>/2020/10/23/Unable-to-access-https-gitee-com-%E8%87%AA%E5%B7%B1%E7%9A%84%E9%A1%B9%E7%9B%AE-Could-not-resolve-host-gitee-com%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<p>果然玩hexo报错是在所难免，就好像我已经长大，读研以后乃至以后得日子，可能总是繁琐常伴。今天在hexo d推到GITEE上时，报了错。  </p>
<p>原因是由于爬梯子代理网络的问题，其实折腾了下。具体哪个步骤解决了这个问题，我也不是很清楚，这次做好记录方便以后继续更新把。</p>
<p>首先我是从这篇<a href="https://blog.csdn.net/weixin_37166398/article/details/101422239?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.channel_param&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.channel_param">博客</a>里查到了我的ip，然后ping了查到的ip，然后在system32\drives\etc\hosts里添加了   </p>
<pre><code>IP gitee.com
</code></pre><p>然而这并没有继续运行成功。<br>然后我有尝试<br>1.管理员身份运行cmd<br>2.输入 </p>
<pre><code>netsh winsock reset
</code></pre><p>3.重启</p>
<p>还有尝试命令行输入  </p>
<pre><code>git config --global --unset http.proxy 
git config --global --unset https.proxy
</code></pre><p>最后发现还是不行，结果我把第一步添加的IP gitee.com删了居然好了。</p>
<p>所以我觉得问题在以下原因，第一个是我没有在打开代理下hexo d,平时确实是没有注意这个问题，但关闭代理下好像有时候也成功过，但这个问题确实出在了代理的问题上。<br>另外就是我的代理导致了无法上传上去，上述的两个操作我也不知道哪个解决了这个问题，毕竟我先添加了IP，然后再试了这两种清楚的。如果下次再出现这个问题，有了结果再继续补充。</p>
<p>2020/11/17<br>他妈个头的，翻墙今天又部署不上去了，前面的用了也不好使，又试了一下这个更改DNS的方法成功了，<a href="https://blog.csdn.net/weixin_42476786/article/details/82691934?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.add_param_isCf&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.add_param_isCf">链接</a>在这</p>
<hr>
]]></content>
      <tags>
        <tag>-hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2020/09/24/markdown%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h1><pre><code># 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题 
</code></pre><p>注：# 和「标题文字」之间建议保留一个字符的空格，这是最标准的 Markdown 写法。</p>
<h1 id="2-粗体、斜体、删除线"><a href="#2-粗体、斜体、删除线" class="headerlink" title="2. 粗体、斜体、删除线"></a>2. 粗体、斜体、删除线</h1><pre><code>*我是斜体*
**我是粗体**
***我是粗斜体***
~~我是删除线~~
</code></pre><p>显示效果：<br><em>我是斜体</em><br><strong>我是粗体</strong><br><strong><em>我是粗斜体</em></strong><br><del>我是删除线</del><br><a id="more"></a></p>
<h1 id="3-表格"><a href="#3-表格" class="headerlink" title="3. 表格"></a>3. 表格</h1><pre><code>| 学号 | 姓名 | 分数|
| :- | -: | :-: |
| 小明 | 男 | 75 |
| 小红 | 女 | 79 |
| 小陆 | 男 | 92 |
</code></pre><p>显示效果：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">学号</th>
<th style="text-align:right">姓名</th>
<th style="text-align:center">分数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">小明</td>
<td style="text-align:right">男</td>
<td style="text-align:center">75</td>
</tr>
<tr>
<td style="text-align:left">小红</td>
<td style="text-align:right">女</td>
<td style="text-align:center">79</td>
</tr>
<tr>
<td style="text-align:left">小陆</td>
<td style="text-align:right">男</td>
<td style="text-align:center">92</td>
</tr>
</tbody>
</table>
</div>
<h1 id="4-有序列表"><a href="#4-有序列表" class="headerlink" title="4. 有序列表"></a>4. 有序列表</h1><pre><code>1. 文本1
2. 文本2
3. 文本3
</code></pre><p>显示效果：  </p>
<ol>
<li>文本1</li>
<li>文本2</li>
<li>文本3</li>
</ol>
<h1 id="5-无序列表"><a href="#5-无序列表" class="headerlink" title="5. 无序列表"></a>5. 无序列表</h1><pre><code>- 文本1
- 文本2
- 文本3
</code></pre><p>显示效果：  </p>
<ul>
<li>文本1</li>
<li>文本2</li>
<li>文本3</li>
</ul>
<h1 id="6-行内代码块"><a href="#6-行内代码块" class="headerlink" title="6. 行内代码块"></a>6. 行内代码块</h1><pre><code>C语言里的函数 `scanf()` 怎么使用？
</code></pre><p>显示效果：<br>C语言里的函数 <code>scanf()</code> 怎么使用？</p>
<h1 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7. 分割线"></a>7. 分割线</h1><h2 id="可以在一行中用三个以上的减号、底线来建立一个分隔线，行内不能有其他内容。"><a href="#可以在一行中用三个以上的减号、底线来建立一个分隔线，行内不能有其他内容。" class="headerlink" title="可以在一行中用三个以上的减号、底线来建立一个分隔线，行内不能有其他内容。  "></a>可以在一行中用三个以上的减号、底线来建立一个分隔线，行内不能有其他内容。  </h2><pre><code>___
</code></pre><h2 id="显示效果："><a href="#显示效果：" class="headerlink" title="显示效果："></a>显示效果：</h2><hr>
<h1 id="8-超链接"><a href="#8-超链接" class="headerlink" title="8. 超链接"></a>8. 超链接</h1><p>语法格式为<a href="链接地址" title="链接标题">链接文字</a>，[]里写链接文字，()里写链接地址, ()中的”“中可以为链接指定title属性，title属性为可选。title属性的效果是鼠标悬停在链接上会出现指定的title文字。链接地址与链接标题前有一个空格。<br>    欢迎来到<a href="http://blog.csdn.net/china_jeffery" title="zzygeo">多加香菜的博客</a></p>
<p>显示效果：<br>欢迎来到<a href="http://blog.csdn.net/china_jeffery" title="zzygeo">多加香菜的博客</a></p>
<h1 id="9-图片"><a href="#9-图片" class="headerlink" title="9. 图片"></a>9. 图片</h1><p>语法格式为<img src="图片地址" alt="图片Alt" title="图片Title">，图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和超链接中的链接标题一样，表示鼠标悬停与图片上时出现的文字。 图片Alt 和 图片Titlee 都是可选的。</p>
<h1 id="10-引用"><a href="#10-引用" class="headerlink" title="10. 引用"></a>10. 引用</h1><pre><code>&gt; 一级引用
&gt;&gt; 二级引用
&gt;&gt;&gt; 三级引用
&gt;&gt;&gt;&gt; 四级引用
</code></pre><p>显示效果：</p>
<blockquote>
<p>一级引用</p>
<blockquote>
<p>二级引用</p>
<blockquote>
<p>三级引用</p>
<blockquote>
<p>四级引用</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<h1 id="11-空格"><a href="#11-空格" class="headerlink" title="11. 空格"></a>11. 空格</h1><pre><code>你好&amp;nbsp;&amp;nbsp;&amp;nbsp;jeffery
</code></pre><p>显示效果<br>你好&nbsp;&nbsp;&nbsp;zzy</p>
<h1 id="12-字体、字号、颜色"><a href="#12-字体、字号、颜色" class="headerlink" title="12. 字体、字号、颜色"></a>12. 字体、字号、颜色</h1><pre><code>&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;
&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;
&lt;font color=#0099ff size=23 face=&quot;黑体&quot;&gt;我是黑体，颜色#0099ff 字号23&lt;/font&gt;
</code></pre><p><font face="黑体">我是黑体字</font>  </p>
<p><font face="微软雅黑">我是微软雅黑</font>  </p>
<p><font color=#0099ff size=23 face="黑体">我是黑体，颜色#0099ff 字号23</font>&lt;/p&gt;</p>
<hr>
]]></content>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo d 出现错误的用户名和密码的解决办法</title>
    <url>/2020/10/02/hexo-d-%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<p>在windows搜索栏输入：控制面板<br><img src="/blog_img/hexo d时错误用户名和密码解决办法/1.png" alt=""><br>然后点击：<br><img src="/blog_img/hexo d时错误用户名和密码解决办法/2.png" alt=""><br><img src="/blog_img/hexo d时错误用户名和密码解决办法/3.png" alt=""><br><img src="/blog_img/hexo d时错误用户名和密码解决办法/4.png" alt=""></p>
<p>点进去就可以更改用户名和密码了</p>
<hr>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title>我的Office激活码</title>
    <url>/2020/09/26/%E6%88%91%E7%9A%84Office%E6%BF%80%E6%B4%BB%E7%A0%81/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="bf6efb1b84774a2219f9812618a959ba3db53f385988578e06fe6ce89eff9fb2">02d8f3e4749f5d3e7d8e79594d95ed2c83a0c853318081784b8675dcb0ac497684af15a8eba28634192f45576b5d8fa72f2e5a82d72b45810a41ae2b2f54b26ce8192bdd743e7da220f0eab5b5e90968e9a39d2a27335c5e1017379ea0154b1c4effc1192bc47fe07bd180802949793b45e14a3a57a6400a16b04678ee15a7d4d9bc5004f7f32c767cf8e772f23e0a91fd7905908a60bb2454e70b0a00d16f754b1aa8b3ead233ceea89c399a99940f140594b49d1c9666704cbcdfcc1e4832c232a5e1d8dda05a462be7996134efb532c678acdbed8a251de5591fc8114e387356b4ee40ab94ef7a4a6424760ec693befe457f71837b06bd1d602fce903564692c4ec2173d085e4f47e35d5978364d4a8f2bd5eeac4539503123d5118a0a1877997994f02b20888042a953e457b8fc2179ee6d7d6e6744f641db7c44a89545b</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>-office</tag>
      </tags>
  </entry>
  <entry>
    <title>梯子</title>
    <url>/2020/09/26/%E6%A2%AF%E5%AD%90/</url>
    <content><![CDATA[<p>名称：meilink羊圈<br>下载地址：<br><img src="/blog_img/梯子/1.png" alt="VPN"><br>页面浏览：<br><img src="/blog_img/梯子/2.png" alt="">  </p>
<p><strong>自己根据需求去购买相应的套餐，一般来说最便宜的一档已经够用了</strong></p>
<hr>
]]></content>
      <categories>
        <category>VPN</category>
      </categories>
      <tags>
        <tag>-梯子</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器以及插件</title>
    <url>/2020/09/26/%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BB%A5%E5%8F%8A%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="1-浏览器：Google-chrome"><a href="#1-浏览器：Google-chrome" class="headerlink" title="1.浏览器：Google chrome"></a>1.浏览器：Google chrome</h1><p>请大家百度自行下载，想去官网下载请看我的这篇<a href="https://zzygeo.gitee.io/2020/09/26/%E6%A2%AF%E5%AD%90/">博客</a>去翻墙</p>
<p><strong>主要想介绍的是一些需要更改的选项</strong>    </p>
<ol>
<li>更改搜索引擎，默认的是google的，这里需要我们改成百度的，不然你每次就只能先翻墙才能搜索。在设置里找到搜素引擎，默认设置为百度。<br><img src="/blog_img/浏览器以及插件/19.png" alt=""></li>
<li>在翻墙以后，浏览器将会打开代理模式，如下图：<br><img src="/blog_img/浏览器以及插件/20.png" alt=""><br><img src="/blog_img/浏览器以及插件/21.png" alt=""><br>但是在你不翻墙的时候，他也是这样设置，这就会导致你使用浏览器的时候，搜东西出现连接不上服务器的问题。这时候你需要设置成这样：<br><img src="/blog_img/浏览器以及插件/22.png" alt=""></li>
</ol>
<h1 id="2-google浏览器的一些好用插件"><a href="#2-google浏览器的一些好用插件" class="headerlink" title="2.google浏览器的一些好用插件"></a>2.google浏览器的一些好用插件</h1><p><strong>注意：在你下载插件的时候，必须先翻墙，不然你无法打开拓展程序商店</strong><br>不多BB直接整活<br>先找到插件搜索地方，如下图：<br><img src="/blog_img/浏览器以及插件/1.png" alt=""><br><img src="/blog_img/浏览器以及插件/2.png" alt=""></p>
<h2 id="1-Adblock-Plus"><a href="#1-Adblock-Plus" class="headerlink" title="1.Adblock Plus"></a>1.Adblock Plus</h2><p><img src="/blog_img/浏览器以及插件/3.png" alt=""></p>
<p>有效去除浏览器广告</p>
<h2 id="2-Awesome-Screenshot"><a href="#2-Awesome-Screenshot" class="headerlink" title="2.Awesome Screenshot"></a>2.Awesome Screenshot</h2><p><img src="/blog_img/浏览器以及插件/4.png" alt=""></p>
<p>可以录频，包括桌面的，浏览器页面的等等，需要先注册账号，录频后的视频会放在你的账户里，可以自行下载。</p>
<h2 id="3-Free-Download-manager"><a href="#3-Free-Download-manager" class="headerlink" title="3.Free Download manager"></a>3.Free Download manager</h2><p>这是一款强大的下载器，速度快而且方便，速度比迅雷更快，更关键的是在你翻墙以后，迅雷的扩展程序有些国外的资源他是不支持下载的，但是这个可以。<br>下载器官网如下：<br><img src="/blog_img/浏览器以及插件/16.png" alt=""></p>
<p>在安装完成后，打开<strong>设置</strong>选项，可以关联扩展，如图：<br><img src="/blog_img/浏览器以及插件/17.png" alt=""></p>
<p>当然你也可以直接到应用商店下载：<br><img src="/blog_img/浏览器以及插件/5.png" alt=""></p>
<p><strong>建议先下载下载器再去下载google扩展程序，这样就可以自动关联了，正好我想下一个腾讯视频，效果如图：</strong><br><img src="/blog_img/浏览器以及插件/18.png" alt=""><br>每次下载你可以自行选择下载地址，很方便管理你的应用。</p>
<h2 id="4-Google翻译"><a href="#4-Google翻译" class="headerlink" title="4.Google翻译"></a>4.Google翻译</h2><p><img src="/blog_img/浏览器以及插件/6.png" alt=""><br>不多介绍了</p>
<h2 id="5-Imagus"><a href="#5-Imagus" class="headerlink" title="5.Imagus"></a>5.Imagus</h2><p><img src="/blog_img/浏览器以及插件/7.png" alt=""></p>
<p>imagus主要就是在你鼠标停留在图片上时，自动放大图片，比如在你购物时：<br><img src="/blog_img/浏览器以及插件/23.png" alt=""></p>
<h2 id="6-Infinity-新标签页"><a href="#6-Infinity-新标签页" class="headerlink" title="6.Infinity 新标签页"></a>6.Infinity 新标签页</h2><p><img src="/blog_img/浏览器以及插件/8.png" alt=""></p>
<p>它可以更换你的浏览器壁纸，可以添加常用网站，看起来很简洁很舒服。效果如下：<br><img src="/blog_img/浏览器以及插件/9.png" alt=""></p>
<h2 id="7-one-Tab"><a href="#7-one-Tab" class="headerlink" title="7.one Tab"></a>7.one Tab</h2><p><img src="/blog_img/浏览器以及插件/10.png" alt=""></p>
<p>当你在打开数十个网页时，图片变小看不清网页信息，如何切换到你想要的页面的，one tab就可以实现，效果如下：<br><img src="/blog_img/浏览器以及插件/24.png" alt=""></p>
<h2 id="8-tampermonkey"><a href="#8-tampermonkey" class="headerlink" title="8.tampermonkey"></a>8.tampermonkey</h2><p><img src="/blog_img/浏览器以及插件/11.png" alt=""><br>油猴是一个强大的工具，其中内置了很多的功能，甚至油猴有插件可以直接拦截百度网盘，将百度网盘的资源以free download 下载。（想到百度网盘原来几K让冲超级会员的嘴脸就想骂他，虽然在上半年提供可以勾选通道，但是也只有100-200k，属实垃圾）。<br>这次我就以一个YOUTUBE视频下载插件为例介绍一下。</p>
<p>打开油猴页面，搜素插件如图，安装插件：<br><img src="/blog_img/浏览器以及插件/13.png" alt=""><br>之后在我打开一个YOUTUBE视频，可以看到出现了下载链接：<br><img src="/blog_img/浏览器以及插件/15.png" alt=""></p>
<h2 id="9-关灯看视频"><a href="#9-关灯看视频" class="headerlink" title="9.关灯看视频"></a>9.关灯看视频</h2><p>在你晚上看B站，看YOUTUBE视频时，可以选择，效果如图：<br><img src="/blog_img/浏览器以及插件/14.png" alt=""></p>
<h2 id="10-fatkun图片下载"><a href="#10-fatkun图片下载" class="headerlink" title="10.fatkun图片下载"></a>10.fatkun图片下载</h2><p>可以一键下载多张图片<br><img src="/blog_img/浏览器以及插件/25.png" alt=""><br><img src="/blog_img/浏览器以及插件/26.png" alt=""></p>
<hr>
]]></content>
      <categories>
        <category>浏览器</category>
      </categories>
      <tags>
        <tag>-浏览器推荐 -浏览器插件</tag>
      </tags>
  </entry>
  <entry>
    <title>关于入门博客的一些事</title>
    <url>/2020/09/24/%E5%85%B3%E4%BA%8E%E5%85%A5%E9%97%A8%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<p>这算是我的第二个博客了，第一部署在Github上，都是基于hexo来搭建的，不过部署在在Github上有这样的问题：  </p>
<ol>
<li>上传到GitHub上很慢，毕竟是国外的服务器。  </li>
<li>有时候Github会抽风，很多时候国内没法访问，必须得上梯子才能上去，还是很不方便的。  </li>
</ol>
<p>所以在用魔改butterfly主题后，直接给我hexo整崩了（主要还是太菜，看不懂大佬写的东西），在此非常感谢那些<strong>无名英雄</strong>，我们只是走在了别人走好的路上。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><p>这次部署在gitee（码云）上，还是很方便的，一个是访问速度确实快，但是需要手动去gitee pages服务更新。第二个是gitee现在的用户也很多了，也见到一些写了几年博客的大佬从github转到了gitee。<br>我是在8月初入坑hexo的，当时什么都不懂，对着B站看视频，别人干啥我跟着干。现在还算有了一些进步吧，好歹能看懂一些config文件了，毕竟在我搞崩hexo后，直接重装了系统重头再来，为此我熬了2天的夜。</p>
<hr>
<p>这次选择的是比较简洁的yilia主题，开发者已经不再提供更新了，后续有基于yilia的plus版本以及各种进阶，在csdn直接就可以搜到。</p>
<hr>
<p>话有些多，有些没逻辑。但是写博客的初心呢，有以下的一些原因：</p>
<ul>
<li>写东西是一个回顾的过程，在解决一个问题以后，以后很有可能继续碰见，当你头皮发麻时，想到你以前完美的记录这个过程，这个问题自然会迎刃而解。</li>
<li>好的博客可以给你找工作加分，一个hr如何去辨识出哪些人是善于思考，善于总结的人，我想博客就是一个很好的媒介，也是了解你具有哪些技术的手段。</li>
<li>博客可以锻炼文笔，虽然我文字功底很烂，但是初衷是希望可以通俗易懂，希望我写的东西可以帮你解决了一个甚至一些问题。</li>
</ul>
<p>在这两天看了这么多博客以后，有好有差，当然博主可能只是记录而已，他能看懂就行，但我希望自己以后写的东西可以仔细一些。</p>
<hr>
<p>更新：<br>yilia是什么（laji），butterfly是真的香，干掉重来。</p>
<hr>
]]></content>
      <tags>
        <tag>感想</tag>
        <tag>心得</tag>
      </tags>
  </entry>
  <entry>
    <title>训练初稿</title>
    <url>/2020/09/24/%E8%AE%AD%E7%BB%83%E5%88%9D%E7%A8%BF/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="2a363f3acf81e59971a449e4c6111615a5251a2beed83f1274c56edcb91d33e0">5f427f63ff781a89ad250abb38a6394452605257467438edf479877ebf3f19045e42c065d4265108128caa952ba8087e8513bb11f23a571c8764522173c9f24556ad590f65a2e07a71fb0dcf73c89da3c3c8a2bcf69e4eda830d205962acdaafb241201709a02f0f9479b109fddc73bc39614f2616f7f0be66a61ac77cc8b7a64068660f2cbbed00d757de4aadb0a0a66b8f22e6614dea4529ef823e5b9e63598e959dc058ecf1852a07b12317dcc250ecc65a0476dca1571004572ad9b8513e12c871743ff7636c242d74cb43d512afe20d001027ebbef6c25e3519789ad4cd2dcc966d107bc41b1cc7ba8e4bec62d12c0b0744118d7a82c8d0726b9786e2cfb926932e5c1ca4914a49f339fb8d8729e95e483f750306025241b2bce65512a0efa1ae87e8046a6650a34a335165f733fce65e95ff1c4172d4859931a29e8a5d5b52ef8bbe6e95588cac3f835d4f9de3b53f5ce1cf49b55bf6e00dbf732a1f2b7afaf4619484b6da36d06b9f2e6ef9610189edac7e264b347ce8426c8ff9eeb6af73a910cf83d10e16a3d7e77d944fcf9a2881b14a44dc886dcd66f5a0380d18b9c12823b7ae2ecce68f3f8f21626b52642dd3ea95f7b4407494c3040eca1dc335de425c444e4f1aa91ff55ba6ad871d59af686b1492d09e491aa8d2dbeb9c1d4cd8ff2b2559ab1fcfbe4c09b357f7267a0572847adf4a250e75c5db5d3dffd3a47cc052000e29c915d5dd3190fe69e6c8653c64f8a357b8775f1b816ce945f79dae3219cb72e6fda07b724c5cda4ea94d49c83778d780d639892c56befc78c753880747b72c98c5c7df17b832eb6549efaa9606bee6cb13e54f9de57e922f89616ea723ce8fd46f0a42cd0756614da32e4151b7470635cb5ebd1ab5c0fc3afcc057016f649675f2aaeb900b346a058b16e26b0f9be04b735c915a26ba23e20bc7b662c1dea18f003bb892ff49a73683f04e570f09281dcd6c813d17d4002da6abeb584bcc055e6969993b1aaae0122a2d35e81d6a0467d09f9ef7776f55641f533d796e21429648b7a1557c91cdf3605cbbd0c007c4b1a5a3c8068eb0e8abc6bec229dd6e46306ce2b0cc05a8c85bef213427dcaf52e573f39e950c0569eee89d6ed41c7bbb8879d6b000be1e5300cc30350f8f167be46337c2e7d4e06c9ed61166a985de2eda1e27e017c4666ae28e45d0dd020e708d970e496aeb0b3f034eb827e8a29c8e85b09647c0bff37f0b8a2e02146e8c0abf005b2c27daa3cbb9b23d8c30e03088300948887a283b0271f9c0ac54653f6ea3484ab1dd4fa85340417cb9740dbef532875f0b748820cebcf33046291deeef5b222ccedb2f4b96aad45afbb3b7149e13b5f1ae3dde97b9ec52c2d61f3097a01ffa59bcc4b9773864500396af1e6ac7aaf45071eb48b5744ee6f44784e7f0479e9dac843e049e69ff4afde08282dd8ccf4fad65fe6584b7ad8744e632ee65d87c6c0df99513449f1e440e7946fd909a09ab252d1c936b4eefc75a110d5357cf6edb01131712f9411c0e38b1f63bcd1da50ac1394c439509d6b0f828b0b716170df0d240fc948a4d675842ca7d155bc1fb7634aff9aaa5e08044829ef08958e6587ea45571c41f8a96809a28c619cedd73048a20969594d660a00317c1a0e613af884543e7f8323aad384408f6352e9c82493d9ac71dd316a3402d2a281e25e44bf92c3f1e0b5894b746a65d55f29f0c5381fffe9d1330ffe495ed2a1adf187d8626dffd3ce23a4fadea0e450093f1c628fea057bbd2ff7919b32ad35b166ff7dd8c9363c09023e583daad3b229f565b8a48b75c503a667db37891d532f5ec079d0179d928001e0817422776badbe8095bfa36e61c764fd965eeb92078d6491552a36695a831702ba2c034b8918f162c1c73b23107b2a0318bbca389aed60e3db5990ba390340c482d193eb2c4544fdf285c602250a79ff636aeb5925d558e3b4ebb3abdd245472a00c0c312b897c7e0bbcaf41125b7e68ca7059ff0c6fe3c675c808abf82564f93295072157e7d883f3d6f88f60934fcf76b8449d4e4cb8116aaaf9095a60cc9ea4ce6aa670d84492e031dd6346439b87d9210c1be33f1ea1a62ffde66822e40795c0ed6109d04f28051b2f5e34dcb027a66a82fcb2296fbea18bb2c319d1534b7c26313bec611d92758cf2d7a8e0775383e93bdde237580a52273032298b09e48bf6045c5bac1c9eaaba421118a725b16796973af7145a940a9a375ea6a96c8aafc89896ea178e49957909bab673c65e71af72fe21d62577aca7f94d962139be5399b9202c81cd9515ab84f8035278ca90ec15bf24fe69df68f899ea532f7ba752cf369a235a5cb988323c9798548bf61d091411474036edb1f11752584108666aed218a51029a6934f6d2ab5ad69edfa13dfecff263ef2bea284f0c90d5c38eb96afab804e9c1635ebf0b5608a1bee47538590e640405226caed788870728a8c4c48fa8fc0fa30f8cfe33ce8e016e3f008e0721f95dfe6719a40c2b804ce2b67e923c910d5006e66bab348c2657e768134cbd1ba374688aeb5a1185ecaf24e89bc6f2dd4362d6c0a2b60b52669798ebec069a29fe99f6aa5d502bb65b3121acd4a64de91849d3844f6b3212c4ff7f1fa1c2dccc4007bb7c55bb5e4d684686f7b2e057d09718786d7818e63b95368b1aa734b984b50ac3c2c9053c2796c17b6a4df4603d42b49e84fbc3cbdb7ecec539164227911fcaaabd1401d95c6c42ab2fc449781cbd7bf947ab5f78249507f8393412b217ae0452aab458568843ece889d3887</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习篇</title>
    <url>/2020/11/11/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AF%87/</url>
    <content><![CDATA[<p>这两天其实做了不少事，时间确实很短，今天和华为的hr小姐姐聊了一会，校招她说3月多就开始了，着实吓到我了，然后还给了我一些鼓励，另外值得高兴的是咨询羊哥的一些问题，他当天就回复了我，这我是没想到的。在这里希望明年的这个时候可以拿到一个不错的offer。</p>
<h1 id="1-深度学习简介"><a href="#1-深度学习简介" class="headerlink" title="1.深度学习简介"></a>1.深度学习简介</h1><p>与其枯坐在房间里思考怎么设计一个识别猫的程序，不如利用人类肉眼在图像中识别猫的能力。我们可以收集一些已知包含猫与不包含猫的真实图像，然后我们的目标就转化成如何从这些图像入手得到一个可以推断出图像中是否有猫的函数。<br>通俗来说，机器学习是一门讨论各式各样的适用于不同问题的函数形式，以及如何使用数据来有效地获取函数参数具体值的学科。深度学习是指机器学习中的一类函数，它们的形式通常为多层神经网络。近年来，仰仗着大数据集和强大的硬件，深度学习已逐渐成为处理图像、文本语料和声音信号等复杂高维度数据的主要方法，算力以及数据集的增长使得机器学习死灰复燃。</p>
<h2 id="1-1机器学习与深度学习的关系"><a href="#1-1机器学习与深度学习的关系" class="headerlink" title="1.1机器学习与深度学习的关系"></a>1.1机器学习与深度学习的关系</h2><p>机器学习研究如何使计算机系统利用经验改善性能。它是人工智能领域的分支，也是实现人工智能的一种手段。在机器学习的众多研究方向中，表征学习关注如何自动找出表示数据的合适方式，以便更好地将输入变换为正确的输出。<br>深度学习是具有多级表示的表征学习方法。在每一级（从原始数据开始），深度学习通过简单的函数将该级的表示变换为更高级的表示。因此，深度学习模型也可以看作是由许多简单函数复合而成的函数。当这些复合的函数足够多时，深度学习模型就可以表达非常复杂的变换。深度学习可以逐级表示越来越抽象的概念或模式。以图像为例，它的输入是一堆原始像素值。深度学习模型中，图像可以逐级表示为特定位置和角度的边缘、由边缘组合得出的花纹、由多种花纹进一步汇合得到的特定部位的模式等。最终，模型能够较容易根据更高级的表示完成给定的任务，如识别图像中的物体。值得一提的是，作为表征学习的一种，深度学习将自动找出每一级表示数据的合适方式。<br>因此，深度学习的一个外在特点是端到端的训练。也就是说，并不是将单独调试的部分拼凑起来组成一个系统，而是将整个系统组建好之后一起训练。比如说，计算机视觉科学家之前曾一度将特征抽取与机器学习模型的构建分开处理，像是Canny边缘探测和SIFT特征提取 曾占据统治性地位达10年以上，但这也就是人类能找到的最好方法了。当深度学习进入这个领域后，这些特征提取方法就被性能更强的自动优化的逐级过滤器替代了。<br>除端到端的训练以外，我们也正在经历从含参数统计模型转向完全无参数的模型。当数据非常稀缺时，我们需要通过简化对现实的假设来得到实用的模型。当数据充足时，我们就可以用能更好地拟合现实的无参数模型来替代这些含参数模型。这也使我们可以得到更精确的模型，尽管需要牺牲一些可解释性。</p>
<h2 id="1-2深度学习的资源"><a href="#1-2深度学习的资源" class="headerlink" title="1.2深度学习的资源"></a>1.2深度学习的资源</h2><p>吴恩达的课确实很好，但我更喜欢这种直接上手边看边做的方法，现在跟着花书挺好的，社区也很强大，在这里贴上链接，原书版以及pytorch版的链接。  </p>
<p><a href="https://github.com/ShusenTang/Dive-into-DL-PyTorch">pytorch</a><br><a href="https://zh.d2l.ai/index.html">原版</a></p>
<h1 id="2-必要软件"><a href="#2-必要软件" class="headerlink" title="2.必要软件"></a>2.必要软件</h1><p>原书中说明已经很清楚了，因此在这里我只会放一些我使用中所碰见的问题。首先是anaconda的一些知识以及jupyter book的知识，链接如下：</p>
<p><a href="https://www.zhihu.com/question/58033789/answer/254673663">anaconda</a><br><a href="https://www.zhihu.com/question/46309360/answer/254638807">jupyter_book</a></p>
<p>在我根据书中的内容安装miniconda以及jupyter book时，在第四步激活了,找不到命令,论坛里也找了找确实也有这个问题，有回答说不是在安装的文件下安装的anaconda。而我自己是直接在安装目录下 Git bash here的，没法用。我寻思是不是没管理员权限，直接搜索栏 cmd，以管理员身份运行。</p>
<pre><code>cd C:\d2l-zh #安装镜像的文件夹
conda activate gluon
jupyter notebook
</code></pre><p>然后会让你输入一个密钥，在命令行中复制就行。到此这两个安装就算完成了。更多关于anaconda以及jupyter book的使用请看以上两个链接。</p>
<hr>
]]></content>
      <categories>
        <category>DL</category>
      </categories>
      <tags>
        <tag>-deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>资源</title>
    <url>/2020/10/04/%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<p>准备把一些资源都放在这个博客下，持续更新，有需要得自取。</p>
<h1 id="1-Linux学习笔记"><a href="#1-Linux学习笔记" class="headerlink" title="1.Linux学习笔记"></a>1.Linux学习笔记</h1><p><a href="https://wws.lanzous.com/iKIZfh7eeuh">链接</a></p>
<h1 id="2-cloud-compare中文版使用手册"><a href="#2-cloud-compare中文版使用手册" class="headerlink" title="2.cloud compare中文版使用手册"></a>2.cloud compare中文版使用手册</h1><p><a href="https://wws.lanzous.com/imyXlh3nide">链接</a></p>
<h1 id="3-深度学习"><a href="#3-深度学习" class="headerlink" title="3.深度学习"></a>3.深度学习</h1><p><a href="https://www.bilibili.com/video/BV164411m79z?from=search&amp;seid=8194466955642792600">吴恩达深度学习课程</a></p>
<p><a href="https://www.kesci.com/home/project/5e20243e2823a10036b542da">吴恩达课程配套科目</a></p>
<p><a href="http://www.ai-start.com/dl2017/">吴恩达深度学习笔记</a></p>
<hr>
]]></content>
      <tags>
        <tag>-资源</tag>
      </tags>
  </entry>
  <entry>
    <title>新电脑上部署hexo</title>
    <url>/2020/10/02/%E6%96%B0%E7%94%B5%E8%84%91%E4%B8%8A%E9%83%A8%E7%BD%B2hexo/</url>
    <content><![CDATA[<h1 id="1-安装必要软件"><a href="#1-安装必要软件" class="headerlink" title="1. 安装必要软件"></a>1. 安装必要软件</h1><p>安装 Git 客户端<br>安装 node JS</p>
<h1 id="2-拷贝源文件"><a href="#2-拷贝源文件" class="headerlink" title="2. 拷贝源文件"></a>2. 拷贝源文件</h1><p>将初始电脑上个人博客文件夹下这几个文件夹拷到当前新电脑的准备设置的博客路径下。</p>
<pre><code>_config.yml
package.json
scaffolds/
source/
themes/
</code></pre><h1 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h1><p>在 cmd 下输入下面指令安装 hexo:</p>
<pre><code>npm install -g hexo
</code></pre><h1 id="4-在新博客路径下，安装三方依赖库"><a href="#4-在新博客路径下，安装三方依赖库" class="headerlink" title="4. 在新博客路径下，安装三方依赖库"></a>4. 在新博客路径下，安装三方依赖库</h1><pre><code>npm install
npm install hexo-deployer-git --save //文章部署到 git 的模块
npm install 主题需要的插件
</code></pre><p><strong>千万别hxeo init</strong>，不然你就拉在裤子里了！！！</p>
<h1 id="5-GITHUB-gitee-添加-SSH-KEYS"><a href="#5-GITHUB-gitee-添加-SSH-KEYS" class="headerlink" title="5. GITHUB/gitee 添加 SSH KEYS"></a>5. GITHUB/gitee 添加 SSH KEYS</h1><p>在GitHub/gitee的ssh keys那里再添加一个当前电脑的环境生成的key，但是可别把原来的电脑删掉了啊。<br>首先在本地创建 SSH Keys:</p>
<pre><code>$ ssh-keygen -t rsa -C “xxxx@qq.com“
</code></pre><p>后面的邮箱即为 github 注册邮箱，也是你登录 Github 的邮箱，之后会要求确认路径和输入密码，一路回车就行。<br>成功的话会在git bash页面下看到生成的 .ssh文件夹路径，进去，打开 id_rsa.pub，复制里面的key（全选）即可。然后拷贝到 Github/gitee 的 SSH Keys(这里要添加一个新的)<br>然后在终端中，我们再次测试下公钥有没有添加成功：</p>
<pre><code>ssh -T git@github.com
</code></pre><p>gitee我还没尝试过，想必改一下后缀就行了。<br>会弹出确认命令，输入yes,会弹出你的名字等等，会出现：</p>
<pre><code>Hi username! You&#39;ve successfully authenticated, but GitHub does not provide shell access.
</code></pre><p>然后：</p>
<pre><code>hexo g
hexo s
hexo d
</code></pre><hr>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>-hexo迁移</tag>
      </tags>
  </entry>
  <entry>
    <title>日记</title>
    <url>/2020/11/07/%E6%97%A5%E8%AE%B0/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">Enter password to read.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="bd4eb4c7c10316c055dd1459d425a0a9a7b0b3567aaf7ca2fe07b7b3d3ef3a0a">eb33a0b69cca7e8745846fe553a26ba9dec307384f9df6ccbd294ea4b62301ad656fa46132335b057e0f49330bdeff1e0c56094970c855ef3a96d2ceac32178f95e5751acc5b181aa27dac97ffbb50e786f6fa68660405f46b64f363d201815f2a657b835c425957429c42c3924eb18b2db698a25421c4673e4a645524f2e0b727fe21d123e126ed72d1ff1bc41569baff3384fcdea72920b8eed2983a0c2f726a4b0e391c97cdcb9a681668d78e937758421a95e8d70b17236df78a91585e593fd56b71e0111d7e5208e95ade423e1b355626c5ec06e0b736b6b02030d660bdba099f85e571acf323531c77497f8c5ffaf71d9bac1c65c751855e18c2af9267b11434284e9e0ec6a37ee35731831f7e98a19e7986f30c83a990956dc6f9439e2794ebd492bde8ab81c8540ba81be0135873667d50676f520135f60d3c9cada75763b8519d31d9d990bb899a37ba90e1550bc4db8139c228c33384918c6dd24bfa0a69af74a44894a264d0fdd1397f6bdb1d0a4d0afbb18847e78da6f977577e976217261cf9e9bf0f0353a5c4aaf3bb96e2247270eb4249d297187ad4efc595a4680a51e1177ab9722e4f030fc69867418488eaa007090adaf2e9ffaae35d1e7ca95277a604c60269a33f6e88c703b29eac4c8da1f3a7c3f57406094ee084082289bd70e1f60b76b91ceb51e51c61b5f36961518713e057d56cf309f13d5a67f516374fcb524ec3d2371c4f85fb01658bb12bea179e17012fc28e0a1db08d9665760b28d51483b8b8c947d8bd0b748919fa988131a76fef435c7fd7cadacc3d53793802cbb791b77fece3415241c06ced8332042477a9ce072953caa73f6b1c135f483810dc6817bed74f28aa0b780819f71f1c95c484f36816fae2f15670ea295e18c6da3cf6a1c2059ebb896797e1b4ba21ae53ff2ec40bf3066aca66970597be31bb4fc97cdbedb487c4b88d233e3170b1da8a0b3de1ecd14e3abfe856085c0bd77ee2163930ce57a45376d025d8796d76ac7d04aed639f222eed1f289f63c5c9602ef7850a82f28e3a71fa58c2e4f1fba97c3a394eb7dd74346f62052dac6a15f9c6eda04cb938f8f7cea7b2a3b01bab2991b88a665a17be797bfc02d9a42f50c7971c6622e3de38b6894423ff1a2bfa437c2884ef8dfaecc59f16a14f23eabca21b8c119dbd629c7285767d1635fe0dfe601b3c375e04df130699a7363ad00eb4c6ce7805333bd3d6f47f0575156f6a0d0b22c592dc74c10360ea8bade054aa1661c9216d4722d5bd337d891e22d9ef20bc1f6045a09bfabf9287c00c09a4b1c96c30b4380a0cf72610957a32e5c9882995c4842807691507bb192af9c61fa02ecadd2c63b947f3634fa48c3cd030a72afddff742af44fa9e35baa2733c2a65cb5d76e051fc503c086569b1cdf3bb7e4e5d51696720fc4ce281d52495c60a7865f6f3731fe1f1d59348858e099fcfbfed83613bcfe5154b690b2ed068aab55c540d5e6f4aef863080d9f408a9a5a4ce83b9e49c328193ca13081e66a885770bb0495f0824b8977c248fd926c67ec60a7b3a8a1006a8c526f259c3e803b1dc7fa8f45333adc4e5e9043dabec03c3a2adf3b4507def2ee59b3e434559c097257b8d9979ff2c4ccf37c599872028dfd8af9eda314830725a287d930bac49d3f7d598e26d8f377f0cd2da4eaebfb5e02c23c54ea10778dfeb1a469959263c763a97d2dbc5bbc6220326ecadd219aef609e818b395a1bfb994906477fe50df50622c36c46c0ff932c761d31f448177688c2393644440eca071025ef9b3fb6bd6cc9b2aa1e371cd76cde7fba7502df6efc197a8d31fd59b5d1698cbfc503cac7f24a11ca0284e618a1b19878e7a9ebe77f92a578af2a21482666d2aa3b8df21a397d1b391d253241609a83e30706a950ce32b735ec1007ae9aaca6d196dd854167c71656644ea6864c7fbf475cdc1f534f104cd24a1f5a2c4f5f430c0db01bdcc4a227a52174f29750ce1c1b997e476792f26bf2e47b59fe3ccf0d463f6fff641ed3cbb50d90ed4e10e633ef4d6046bbbf6fe399cf2104ef99636d9da08144f207e727e3b55319d6b82a25b4466ec596c8bb12ee013b40af869e7a4b055a08eb4093a43ebe10658ac9f44d21ae8893718fcc45672a6dfa6649f05b0c1e5ed7b69ee0eb619b178578c49291ab71392bdd6963e90adc7d58d29a66c4ecc6f6b6e2ce28efcb7b6906a5cfa35978c099344eb5e658e42111a09c216a600b49370ce609b23f23879db9f0a18d87f9ac439f385e2d52815687b2f96f417903db9c6d9cf5a4c9a05a2729a3acf6c2c771fec69b4b5f55a671cf541fce76c3df91c0a4a1b3a6003d95374ea379cd693c51c35f00a1018f85ba14edbbb219e4245d7edc7949aed1b82f7fe20d88ee6ed9c1752c8f473759292f7e36450a68b3fb6ef9c4a1d7e87d1c04199165ea2877c1092aafbd71e4169ed1330ed279abc882a431701f84a973c8b0a973398582832a54869697186b7738876fd2ce3519e45020c825e05fa8551c6a64f5a0e5eac948a0a89a8485061b7c73cdba05479e0e85610e2e4aeaaa685e8d316b8875be481a466844208ec6e6ee4af2dadb6c94d1c67d94b79dc32fe765c31246462c2b036dffe295856017078f9d84a65dcbc5c6124d83f98edb80c3d844dc20f80daa2c72bdba1048f3dd91f8af254c5f63bbe64cbcd829545d9afe06b4b9be28e15fde0122a3af13d03c1caa063fd292de73abebc46646c082ea20665549068a53fbbcf65b8ec4a6bb6bb1d7ee3aa85858df11d5ba67d1546b0e327b3ffa4ee20450ad5cfd65c46084a0a29966051dbf1881b3556386a0485f501b00a19d796dafaf0817ddb9c93877ca0038eb1ba185de24f7fd68ab6d88aecf8e18c5d24397dcb65f3f8ac54d9e28bd1d99f4c5f66a76224faf8cac272ded9f8c5cddc5920298980105a714713f8600eba3b96f652d0d2527486154d9c17150df2fec16566a1aa6f752c906279faa0dacb136d65943de7a9e12f21771745aa7a2e78313e4340a675140bca74bf2349ba9c82f4d0177f2ca74ace8a0187c26266961a323b0c6f7acc23327f99c7892271e294baf195b0b5ba6eeb0fe6d39abb4e1f49877610a0e9220dba0f510ecfbb3f18dbe696bf64d5f6b2e54cfb10dbbb35e833a9d3595f174bc3895c8a356216c29f342ccc023929b1f2995eb530efd8e3184ad9d1127ef7307d6ef1ff3a37c46880e00473d0b46669bee978d6b1a0dbc2bea106b88e978222455f6f3fefc6a2cf51f39a621a0a31fd55f2ff936e127080f114f17f4131e78bec6d2e4c7555ec7903054d7c09f0783c7a3e6be4d47c26c67d9debecf0588a9a6ff022bb5a62079821377f029868486e4ae8704c445948202c885712f54f209f8ecb2d29d7b7d0104a928040c96108344bb1ebdf73074a037be564f594c4aa97b1a3144c3f3a4b1bad226b6772b9584cdd34dbb39c54d903da187165246a576a39d1c72c9f795533928437b66e68bc14c8e20b28d28cf68da6d854b7a8d33c603a88bebaa3bbb287fda7460e209d0ec2061b6be030f1d31a6c8e0d525ebd5d6babc8a0d2928d03e95b3e7639bc38b66918a31a896e22d31f29c327869619138739027f04c3d5aeeabc344f24a1e10f9a52c664b261f3142dda72d9bc75688b22be1b0a99100db083dddddcaf2ae5ea17ef4de345a13ca1c0e78a655a797e3cdc7cdc16dce34892b0191789ba2144b5eab817d8048bebe7d326c903e4c5c780d3e32a966d4ea079d56b10c99f6a3fa175a433b31c6d642fbda3c1503f27a3ff6b7943b60021c13a4dee6a17d985ce73e38dd4c4847d163924bc57ccbc4cb787f0d0a3c603240d9d89fa201982b3fdb9cc52a57fbf88b8fa3455b612c96d4c33fa568648f236003ab8ffa7e66420f28d9844ac864e42e4e34d8604c09be334e40f063b53d14839cb4599d9ef30dc0d70136bc5732ae0e9f4dbcbdc038013707ea555f853267ca5bad6637ffdb6269f66558780f6ab9f30766045d37c79fc5b186c66c066a6c29d5374de2da0cc7650d72cc9306adbd282165f8b62f54070388b14baf76a843812bd5390323a7b98f518d5a7852aa4ea2da3567f244efb49170f9b0eb24f029bfe5a6f90980bdfdbf745faa0231c7867486985c019a1297adfc0ae83673471c30104a5f82b1dfdab4ccaf2242c5298b345d35adc835dfa1622f9c227ddedcfdf294bb1ea79eea1ec0d0048ac3a4f28a9a58d5e61c68295c7e962ae0ab3d4b4e72caae7b91d0126a7952080c89c4fab9cdd7383ea0c0cd71e5a0d414cbfcaa38e73421b31e38e8b9f83f5bb22bf7344dbefe83dacfac3c8b073dfc4038a7f540100e68b2c8ec7e819a68cc027dd0c13642b97bf3177bb5c7b8dca424f1699daff8cae50f1aaf05490ead0c562874fea69ac9f3dc286fb903ce7ea5ad4580a420d6a3294d8bec855c73a9d8553be60292ce91790365000fb4c8d1b292f1818b3f9a7ea51486576925681d4bb2f6c7fd7206f8a1f166ef01c440db9754e6551a6537e93514906a6dd96edb55c52048db9f7265bc1073f7da7012ed965a4b7ac49f42fa53a299b1b8fea18619f78c4b137cf7ceafd96387a024c8868aae4de376e69bad3138c1c55352ed9f5418e05ad86eff8886f8b3b015ba32b8919e1038603d7b41527d6e739f14cebdaf9f10a28188e118fd9b954f0217064d8306fe4e1de4c7f77b5b16ed0259836b8666cd33dd0033a1df86f412755000f428b6a18ec21b6f4b90a0f470e82d9cef0eefe877774afa829cef48c531ac08b9b82d17020d8122b60f11e8296c5eaecea86e89867c9ace7c95a7d0ceffcf14963705d3013d3d4da208e2dda5477d07d1862772cab99476f9e20bac2200242324b715ec821276be49102e10aae710b1abd9e12b51e8a088f334ca793ac90c66e6eeae9fb787f460e065e610c33cdcb9645d24be0737d0ae9b1280e5c46181302c9781f50d2ce75a</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>日记</category>
      </categories>
  </entry>
  <entry>
    <title>编译器</title>
    <url>/2020/11/26/%E7%BC%96%E8%AF%91%E5%99%A8/</url>
    <content><![CDATA[<p>鉴于在编译器的配置上花费了一些时间，在两台电脑上都进行了配置，想单独写一篇博客来介绍编译器。持续更新，现在用的是vscode 进行c以及python的使用，具体的链接如下：<br><a href="https://blog.csdn.net/m0_45161766/article/details/105729025">vscode配置anaconda环境</a><br>使用python强烈建议直接装一个anaconda全家桶，里面的库很多也很方便管理。<br>2020/11/26更新，vscode for python读取文本总找不到，搜了很多博客也没解决，可能我太菜了，这个VSCODE真不太适合新手。。。   python还是直接pycharm或者jupyter吧，pycharm那点内存对我们搞机的不是简简单单嘛！！！<br><a href="https://www.jb51.net/article/171027.htm">vscode配置C语言环境</a></p>
<hr>
]]></content>
      <tags>
        <tag>-编译器</tag>
      </tags>
  </entry>
</search>
